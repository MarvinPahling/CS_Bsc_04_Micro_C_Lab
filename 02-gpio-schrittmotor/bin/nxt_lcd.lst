   1              		.cpu arm7tdmi
   2              		.arch armv4t
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 0
  12              		.eabi_attribute 18, 4
  13              		.file	"nxt_lcd.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.file 1 "./lib/nxt_lcd.c"
  18              		.bss
  19              		.align	2
  20              	display:
  21 0000 00000000 		.space	4
  23              		.section	.text.nxt_lcd_command,"ax",%progbits
  24              		.align	2
  25              		.global	nxt_lcd_command
  26              		.syntax unified
  27              		.arm
  29              	nxt_lcd_command:
  30              	.LFB0:
   1:./lib/nxt_lcd.c **** #include "nxt_lcd.h"
   2:./lib/nxt_lcd.c **** #include "nxt_spi.h"
   3:./lib/nxt_lcd.c **** #include "systick.h"
   4:./lib/nxt_lcd.c **** #include "string.h"
   5:./lib/nxt_lcd.c **** 
   6:./lib/nxt_lcd.c **** static uint8_t *display = (uint8_t *)0;
   7:./lib/nxt_lcd.c **** 
   8:./lib/nxt_lcd.c **** void
   9:./lib/nxt_lcd.c **** nxt_lcd_command(uint8_t cmd)
  10:./lib/nxt_lcd.c **** {
  31              		.loc 1 10 1
  32              		.cfi_startproc
  33              		@ Function supports interworking.
  34              		@ args = 0, pretend = 0, frame = 16
  35              		@ frame_needed = 1, uses_anonymous_args = 0
  36 0000 00482DE9 		push	{fp, lr}
  37              		.cfi_def_cfa_offset 8
  38              		.cfi_offset 11, -8
  39              		.cfi_offset 14, -4
  40 0004 04B08DE2 		add	fp, sp, #4
  41              		.cfi_def_cfa 11, 4
  42 0008 10D04DE2 		sub	sp, sp, #16
  43 000c 0030A0E1 		mov	r3, r0
  44 0010 0D304BE5 		strb	r3, [fp, #-13]
  11:./lib/nxt_lcd.c ****   uint8_t tmp = cmd;
  45              		.loc 1 11 11
  46 0014 0D305BE5 		ldrb	r3, [fp, #-13]
  47 0018 05304BE5 		strb	r3, [fp, #-5]
  12:./lib/nxt_lcd.c **** 
  13:./lib/nxt_lcd.c ****   nxt_spi_write(0, &tmp, 1);
  48              		.loc 1 13 3
  49 001c 05304BE2 		sub	r3, fp, #5
  50 0020 0120A0E3 		mov	r2, #1
  51 0024 0310A0E1 		mov	r1, r3
  52 0028 0000A0E3 		mov	r0, #0
  53 002c 14309FE5 		ldr	r3, .L2
  54 0030 0FE0A0E1 		mov	lr, pc
  55 0034 13FF2FE1 		bx	r3
  56              	.LVL0:
  14:./lib/nxt_lcd.c **** }
  57              		.loc 1 14 1
  58 0038 0000A0E1 		nop
  59 003c 04D04BE2 		sub	sp, fp, #4
  60              		.cfi_def_cfa 13, 8
  61              		@ sp needed
  62 0040 0048BDE8 		pop	{fp, lr}
  63              		.cfi_restore 14
  64              		.cfi_restore 11
  65              		.cfi_def_cfa_offset 0
  66 0044 1EFF2FE1 		bx	lr
  67              	.L3:
  68              		.align	2
  69              	.L2:
  70 0048 00000000 		.word	nxt_spi_write
  71              		.cfi_endproc
  72              	.LFE0:
  74              		.section	.text.nxt_lcd_set_col,"ax",%progbits
  75              		.align	2
  76              		.global	nxt_lcd_set_col
  77              		.syntax unified
  78              		.arm
  80              	nxt_lcd_set_col:
  81              	.LFB1:
  15:./lib/nxt_lcd.c **** 
  16:./lib/nxt_lcd.c **** void
  17:./lib/nxt_lcd.c **** nxt_lcd_set_col(uint32_t coladdr)
  18:./lib/nxt_lcd.c **** {
  82              		.loc 1 18 1
  83              		.cfi_startproc
  84              		@ Function supports interworking.
  85              		@ args = 0, pretend = 0, frame = 8
  86              		@ frame_needed = 1, uses_anonymous_args = 0
  87 0000 00482DE9 		push	{fp, lr}
  88              		.cfi_def_cfa_offset 8
  89              		.cfi_offset 11, -8
  90              		.cfi_offset 14, -4
  91 0004 04B08DE2 		add	fp, sp, #4
  92              		.cfi_def_cfa 11, 4
  93 0008 08D04DE2 		sub	sp, sp, #8
  94 000c 08000BE5 		str	r0, [fp, #-8]
  19:./lib/nxt_lcd.c ****   nxt_lcd_command(0x00 | (coladdr & 0xF));
  95              		.loc 1 19 3
  96 0010 08301BE5 		ldr	r3, [fp, #-8]
  97 0014 FF3003E2 		and	r3, r3, #255
  98 0018 0F3003E2 		and	r3, r3, #15
  99 001c FF3003E2 		and	r3, r3, #255
 100 0020 0300A0E1 		mov	r0, r3
 101 0024 40309FE5 		ldr	r3, .L5
 102 0028 0FE0A0E1 		mov	lr, pc
 103 002c 13FF2FE1 		bx	r3
 104              	.LVL1:
  20:./lib/nxt_lcd.c ****   nxt_lcd_command(0x10 | ((coladdr >> 4) & 0xF));
 105              		.loc 1 20 36
 106 0030 08301BE5 		ldr	r3, [fp, #-8]
 107 0034 2332A0E1 		lsr	r3, r3, #4
 108              		.loc 1 20 42
 109 0038 FF3003E2 		and	r3, r3, #255
 110 003c 0F3003E2 		and	r3, r3, #15
 111 0040 FF3003E2 		and	r3, r3, #255
 112              		.loc 1 20 3
 113 0044 103083E3 		orr	r3, r3, #16
 114 0048 FF3003E2 		and	r3, r3, #255
 115 004c 0300A0E1 		mov	r0, r3
 116 0050 14309FE5 		ldr	r3, .L5
 117 0054 0FE0A0E1 		mov	lr, pc
 118 0058 13FF2FE1 		bx	r3
 119              	.LVL2:
  21:./lib/nxt_lcd.c **** }
 120              		.loc 1 21 1
 121 005c 0000A0E1 		nop
 122 0060 04D04BE2 		sub	sp, fp, #4
 123              		.cfi_def_cfa 13, 8
 124              		@ sp needed
 125 0064 0048BDE8 		pop	{fp, lr}
 126              		.cfi_restore 14
 127              		.cfi_restore 11
 128              		.cfi_def_cfa_offset 0
 129 0068 1EFF2FE1 		bx	lr
 130              	.L6:
 131              		.align	2
 132              	.L5:
 133 006c 00000000 		.word	nxt_lcd_command
 134              		.cfi_endproc
 135              	.LFE1:
 137              		.section	.text.nxt_lcd_set_multiplex_rate,"ax",%progbits
 138              		.align	2
 139              		.global	nxt_lcd_set_multiplex_rate
 140              		.syntax unified
 141              		.arm
 143              	nxt_lcd_set_multiplex_rate:
 144              	.LFB2:
  22:./lib/nxt_lcd.c **** 
  23:./lib/nxt_lcd.c **** void
  24:./lib/nxt_lcd.c **** nxt_lcd_set_multiplex_rate(uint32_t mr)
  25:./lib/nxt_lcd.c **** {
 145              		.loc 1 25 1
 146              		.cfi_startproc
 147              		@ Function supports interworking.
 148              		@ args = 0, pretend = 0, frame = 8
 149              		@ frame_needed = 1, uses_anonymous_args = 0
 150 0000 00482DE9 		push	{fp, lr}
 151              		.cfi_def_cfa_offset 8
 152              		.cfi_offset 11, -8
 153              		.cfi_offset 14, -4
 154 0004 04B08DE2 		add	fp, sp, #4
 155              		.cfi_def_cfa 11, 4
 156 0008 08D04DE2 		sub	sp, sp, #8
 157 000c 08000BE5 		str	r0, [fp, #-8]
  26:./lib/nxt_lcd.c ****   nxt_lcd_command(0x20 | (mr & 3));
 158              		.loc 1 26 30
 159 0010 08301BE5 		ldr	r3, [fp, #-8]
 160 0014 FF3003E2 		and	r3, r3, #255
 161 0018 033003E2 		and	r3, r3, #3
 162 001c FF3003E2 		and	r3, r3, #255
 163              		.loc 1 26 3
 164 0020 203083E3 		orr	r3, r3, #32
 165 0024 FF3003E2 		and	r3, r3, #255
 166 0028 0300A0E1 		mov	r0, r3
 167 002c 14309FE5 		ldr	r3, .L8
 168 0030 0FE0A0E1 		mov	lr, pc
 169 0034 13FF2FE1 		bx	r3
 170              	.LVL3:
  27:./lib/nxt_lcd.c **** }
 171              		.loc 1 27 1
 172 0038 0000A0E1 		nop
 173 003c 04D04BE2 		sub	sp, fp, #4
 174              		.cfi_def_cfa 13, 8
 175              		@ sp needed
 176 0040 0048BDE8 		pop	{fp, lr}
 177              		.cfi_restore 14
 178              		.cfi_restore 11
 179              		.cfi_def_cfa_offset 0
 180 0044 1EFF2FE1 		bx	lr
 181              	.L9:
 182              		.align	2
 183              	.L8:
 184 0048 00000000 		.word	nxt_lcd_command
 185              		.cfi_endproc
 186              	.LFE2:
 188              		.section	.text.nxt_lcd_set_temp_comp,"ax",%progbits
 189              		.align	2
 190              		.global	nxt_lcd_set_temp_comp
 191              		.syntax unified
 192              		.arm
 194              	nxt_lcd_set_temp_comp:
 195              	.LFB3:
  28:./lib/nxt_lcd.c **** 
  29:./lib/nxt_lcd.c **** void
  30:./lib/nxt_lcd.c **** nxt_lcd_set_temp_comp(uint32_t tc)
  31:./lib/nxt_lcd.c **** {
 196              		.loc 1 31 1
 197              		.cfi_startproc
 198              		@ Function supports interworking.
 199              		@ args = 0, pretend = 0, frame = 8
 200              		@ frame_needed = 1, uses_anonymous_args = 0
 201 0000 00482DE9 		push	{fp, lr}
 202              		.cfi_def_cfa_offset 8
 203              		.cfi_offset 11, -8
 204              		.cfi_offset 14, -4
 205 0004 04B08DE2 		add	fp, sp, #4
 206              		.cfi_def_cfa 11, 4
 207 0008 08D04DE2 		sub	sp, sp, #8
 208 000c 08000BE5 		str	r0, [fp, #-8]
  32:./lib/nxt_lcd.c ****   nxt_lcd_command(0x24 | (tc & 3));
 209              		.loc 1 32 30
 210 0010 08301BE5 		ldr	r3, [fp, #-8]
 211 0014 FF3003E2 		and	r3, r3, #255
 212 0018 033003E2 		and	r3, r3, #3
 213 001c FF3003E2 		and	r3, r3, #255
 214              		.loc 1 32 3
 215 0020 243083E3 		orr	r3, r3, #36
 216 0024 FF3003E2 		and	r3, r3, #255
 217 0028 0300A0E1 		mov	r0, r3
 218 002c 14309FE5 		ldr	r3, .L11
 219 0030 0FE0A0E1 		mov	lr, pc
 220 0034 13FF2FE1 		bx	r3
 221              	.LVL4:
  33:./lib/nxt_lcd.c **** }
 222              		.loc 1 33 1
 223 0038 0000A0E1 		nop
 224 003c 04D04BE2 		sub	sp, fp, #4
 225              		.cfi_def_cfa 13, 8
 226              		@ sp needed
 227 0040 0048BDE8 		pop	{fp, lr}
 228              		.cfi_restore 14
 229              		.cfi_restore 11
 230              		.cfi_def_cfa_offset 0
 231 0044 1EFF2FE1 		bx	lr
 232              	.L12:
 233              		.align	2
 234              	.L11:
 235 0048 00000000 		.word	nxt_lcd_command
 236              		.cfi_endproc
 237              	.LFE3:
 239              		.section	.text.nxt_lcd_set_panel_loading,"ax",%progbits
 240              		.align	2
 241              		.global	nxt_lcd_set_panel_loading
 242              		.syntax unified
 243              		.arm
 245              	nxt_lcd_set_panel_loading:
 246              	.LFB4:
  34:./lib/nxt_lcd.c **** 
  35:./lib/nxt_lcd.c **** void
  36:./lib/nxt_lcd.c **** nxt_lcd_set_panel_loading(uint32_t hi)
  37:./lib/nxt_lcd.c **** {
 247              		.loc 1 37 1
 248              		.cfi_startproc
 249              		@ Function supports interworking.
 250              		@ args = 0, pretend = 0, frame = 8
 251              		@ frame_needed = 1, uses_anonymous_args = 0
 252 0000 00482DE9 		push	{fp, lr}
 253              		.cfi_def_cfa_offset 8
 254              		.cfi_offset 11, -8
 255              		.cfi_offset 14, -4
 256 0004 04B08DE2 		add	fp, sp, #4
 257              		.cfi_def_cfa 11, 4
 258 0008 08D04DE2 		sub	sp, sp, #8
 259 000c 08000BE5 		str	r0, [fp, #-8]
  38:./lib/nxt_lcd.c ****   nxt_lcd_command(0x28 | ((hi) ? 1 : 0));
 260              		.loc 1 38 3
 261 0010 08301BE5 		ldr	r3, [fp, #-8]
 262 0014 000053E3 		cmp	r3, #0
 263 0018 0100000A 		beq	.L14
 264              		.loc 1 38 3 is_stmt 0 discriminator 1
 265 001c 2930A0E3 		mov	r3, #41
 266 0020 000000EA 		b	.L15
 267              	.L14:
 268              		.loc 1 38 3 discriminator 2
 269 0024 2830A0E3 		mov	r3, #40
 270              	.L15:
 271              		.loc 1 38 3 discriminator 4
 272 0028 0300A0E1 		mov	r0, r3
 273 002c 14309FE5 		ldr	r3, .L16
 274 0030 0FE0A0E1 		mov	lr, pc
 275 0034 13FF2FE1 		bx	r3
 276              	.LVL5:
  39:./lib/nxt_lcd.c **** }
 277              		.loc 1 39 1 is_stmt 1
 278 0038 0000A0E1 		nop
 279 003c 04D04BE2 		sub	sp, fp, #4
 280              		.cfi_def_cfa 13, 8
 281              		@ sp needed
 282 0040 0048BDE8 		pop	{fp, lr}
 283              		.cfi_restore 14
 284              		.cfi_restore 11
 285              		.cfi_def_cfa_offset 0
 286 0044 1EFF2FE1 		bx	lr
 287              	.L17:
 288              		.align	2
 289              	.L16:
 290 0048 00000000 		.word	nxt_lcd_command
 291              		.cfi_endproc
 292              	.LFE4:
 294              		.section	.text.nxt_lcd_set_pump_control,"ax",%progbits
 295              		.align	2
 296              		.global	nxt_lcd_set_pump_control
 297              		.syntax unified
 298              		.arm
 300              	nxt_lcd_set_pump_control:
 301              	.LFB5:
  40:./lib/nxt_lcd.c **** 
  41:./lib/nxt_lcd.c **** void
  42:./lib/nxt_lcd.c **** nxt_lcd_set_pump_control(uint32_t pc)
  43:./lib/nxt_lcd.c **** {
 302              		.loc 1 43 1
 303              		.cfi_startproc
 304              		@ Function supports interworking.
 305              		@ args = 0, pretend = 0, frame = 8
 306              		@ frame_needed = 1, uses_anonymous_args = 0
 307 0000 00482DE9 		push	{fp, lr}
 308              		.cfi_def_cfa_offset 8
 309              		.cfi_offset 11, -8
 310              		.cfi_offset 14, -4
 311 0004 04B08DE2 		add	fp, sp, #4
 312              		.cfi_def_cfa 11, 4
 313 0008 08D04DE2 		sub	sp, sp, #8
 314 000c 08000BE5 		str	r0, [fp, #-8]
  44:./lib/nxt_lcd.c ****   nxt_lcd_command(0x2c | (pc & 3));
 315              		.loc 1 44 30
 316 0010 08301BE5 		ldr	r3, [fp, #-8]
 317 0014 FF3003E2 		and	r3, r3, #255
 318 0018 033003E2 		and	r3, r3, #3
 319 001c FF3003E2 		and	r3, r3, #255
 320              		.loc 1 44 3
 321 0020 2C3083E3 		orr	r3, r3, #44
 322 0024 FF3003E2 		and	r3, r3, #255
 323 0028 0300A0E1 		mov	r0, r3
 324 002c 14309FE5 		ldr	r3, .L19
 325 0030 0FE0A0E1 		mov	lr, pc
 326 0034 13FF2FE1 		bx	r3
 327              	.LVL6:
  45:./lib/nxt_lcd.c **** }
 328              		.loc 1 45 1
 329 0038 0000A0E1 		nop
 330 003c 04D04BE2 		sub	sp, fp, #4
 331              		.cfi_def_cfa 13, 8
 332              		@ sp needed
 333 0040 0048BDE8 		pop	{fp, lr}
 334              		.cfi_restore 14
 335              		.cfi_restore 11
 336              		.cfi_def_cfa_offset 0
 337 0044 1EFF2FE1 		bx	lr
 338              	.L20:
 339              		.align	2
 340              	.L19:
 341 0048 00000000 		.word	nxt_lcd_command
 342              		.cfi_endproc
 343              	.LFE5:
 345              		.section	.text.nxt_lcd_set_scroll_line,"ax",%progbits
 346              		.align	2
 347              		.global	nxt_lcd_set_scroll_line
 348              		.syntax unified
 349              		.arm
 351              	nxt_lcd_set_scroll_line:
 352              	.LFB6:
  46:./lib/nxt_lcd.c **** 
  47:./lib/nxt_lcd.c **** void
  48:./lib/nxt_lcd.c **** nxt_lcd_set_scroll_line(uint32_t sl)
  49:./lib/nxt_lcd.c **** {
 353              		.loc 1 49 1
 354              		.cfi_startproc
 355              		@ Function supports interworking.
 356              		@ args = 0, pretend = 0, frame = 8
 357              		@ frame_needed = 1, uses_anonymous_args = 0
 358 0000 00482DE9 		push	{fp, lr}
 359              		.cfi_def_cfa_offset 8
 360              		.cfi_offset 11, -8
 361              		.cfi_offset 14, -4
 362 0004 04B08DE2 		add	fp, sp, #4
 363              		.cfi_def_cfa 11, 4
 364 0008 08D04DE2 		sub	sp, sp, #8
 365 000c 08000BE5 		str	r0, [fp, #-8]
  50:./lib/nxt_lcd.c ****   nxt_lcd_command(0x40 | (sl & 0x3f));
 366              		.loc 1 50 30
 367 0010 08301BE5 		ldr	r3, [fp, #-8]
 368 0014 FF3003E2 		and	r3, r3, #255
 369 0018 3F3003E2 		and	r3, r3, #63
 370 001c FF3003E2 		and	r3, r3, #255
 371              		.loc 1 50 3
 372 0020 403083E3 		orr	r3, r3, #64
 373 0024 FF3003E2 		and	r3, r3, #255
 374 0028 0300A0E1 		mov	r0, r3
 375 002c 14309FE5 		ldr	r3, .L22
 376 0030 0FE0A0E1 		mov	lr, pc
 377 0034 13FF2FE1 		bx	r3
 378              	.LVL7:
  51:./lib/nxt_lcd.c **** }
 379              		.loc 1 51 1
 380 0038 0000A0E1 		nop
 381 003c 04D04BE2 		sub	sp, fp, #4
 382              		.cfi_def_cfa 13, 8
 383              		@ sp needed
 384 0040 0048BDE8 		pop	{fp, lr}
 385              		.cfi_restore 14
 386              		.cfi_restore 11
 387              		.cfi_def_cfa_offset 0
 388 0044 1EFF2FE1 		bx	lr
 389              	.L23:
 390              		.align	2
 391              	.L22:
 392 0048 00000000 		.word	nxt_lcd_command
 393              		.cfi_endproc
 394              	.LFE6:
 396              		.section	.text.nxt_lcd_set_page_address,"ax",%progbits
 397              		.align	2
 398              		.global	nxt_lcd_set_page_address
 399              		.syntax unified
 400              		.arm
 402              	nxt_lcd_set_page_address:
 403              	.LFB7:
  52:./lib/nxt_lcd.c **** 
  53:./lib/nxt_lcd.c **** void
  54:./lib/nxt_lcd.c **** nxt_lcd_set_page_address(uint32_t pa)
  55:./lib/nxt_lcd.c **** {
 404              		.loc 1 55 1
 405              		.cfi_startproc
 406              		@ Function supports interworking.
 407              		@ args = 0, pretend = 0, frame = 8
 408              		@ frame_needed = 1, uses_anonymous_args = 0
 409 0000 00482DE9 		push	{fp, lr}
 410              		.cfi_def_cfa_offset 8
 411              		.cfi_offset 11, -8
 412              		.cfi_offset 14, -4
 413 0004 04B08DE2 		add	fp, sp, #4
 414              		.cfi_def_cfa 11, 4
 415 0008 08D04DE2 		sub	sp, sp, #8
 416 000c 08000BE5 		str	r0, [fp, #-8]
  56:./lib/nxt_lcd.c ****   nxt_lcd_command(0xB0 | (pa & 0xf));
 417              		.loc 1 56 30
 418 0010 08301BE5 		ldr	r3, [fp, #-8]
 419 0014 FF3003E2 		and	r3, r3, #255
 420 0018 0F3003E2 		and	r3, r3, #15
 421 001c FF3003E2 		and	r3, r3, #255
 422              		.loc 1 56 3
 423 0020 0330E0E1 		mvn	r3, r3
 424 0024 4F3003E2 		and	r3, r3, #79
 425 0028 0330E0E1 		mvn	r3, r3
 426 002c FF3003E2 		and	r3, r3, #255
 427 0030 0300A0E1 		mov	r0, r3
 428 0034 14309FE5 		ldr	r3, .L25
 429 0038 0FE0A0E1 		mov	lr, pc
 430 003c 13FF2FE1 		bx	r3
 431              	.LVL8:
  57:./lib/nxt_lcd.c **** }
 432              		.loc 1 57 1
 433 0040 0000A0E1 		nop
 434 0044 04D04BE2 		sub	sp, fp, #4
 435              		.cfi_def_cfa 13, 8
 436              		@ sp needed
 437 0048 0048BDE8 		pop	{fp, lr}
 438              		.cfi_restore 14
 439              		.cfi_restore 11
 440              		.cfi_def_cfa_offset 0
 441 004c 1EFF2FE1 		bx	lr
 442              	.L26:
 443              		.align	2
 444              	.L25:
 445 0050 00000000 		.word	nxt_lcd_command
 446              		.cfi_endproc
 447              	.LFE7:
 449              		.section	.text.nxt_lcd_set_pot,"ax",%progbits
 450              		.align	2
 451              		.global	nxt_lcd_set_pot
 452              		.syntax unified
 453              		.arm
 455              	nxt_lcd_set_pot:
 456              	.LFB8:
  58:./lib/nxt_lcd.c **** 
  59:./lib/nxt_lcd.c **** void
  60:./lib/nxt_lcd.c **** nxt_lcd_set_pot(uint32_t pot)
  61:./lib/nxt_lcd.c **** {
 457              		.loc 1 61 1
 458              		.cfi_startproc
 459              		@ Function supports interworking.
 460              		@ args = 0, pretend = 0, frame = 8
 461              		@ frame_needed = 1, uses_anonymous_args = 0
 462 0000 00482DE9 		push	{fp, lr}
 463              		.cfi_def_cfa_offset 8
 464              		.cfi_offset 11, -8
 465              		.cfi_offset 14, -4
 466 0004 04B08DE2 		add	fp, sp, #4
 467              		.cfi_def_cfa 11, 4
 468 0008 08D04DE2 		sub	sp, sp, #8
 469 000c 08000BE5 		str	r0, [fp, #-8]
  62:./lib/nxt_lcd.c ****   nxt_lcd_command(0x81);
 470              		.loc 1 62 3
 471 0010 8100A0E3 		mov	r0, #129
 472 0014 2C309FE5 		ldr	r3, .L28
 473 0018 0FE0A0E1 		mov	lr, pc
 474 001c 13FF2FE1 		bx	r3
 475              	.LVL9:
  63:./lib/nxt_lcd.c ****   nxt_lcd_command(pot & 0xff);
 476              		.loc 1 63 3
 477 0020 08301BE5 		ldr	r3, [fp, #-8]
 478 0024 FF3003E2 		and	r3, r3, #255
 479 0028 0300A0E1 		mov	r0, r3
 480 002c 14309FE5 		ldr	r3, .L28
 481 0030 0FE0A0E1 		mov	lr, pc
 482 0034 13FF2FE1 		bx	r3
 483              	.LVL10:
  64:./lib/nxt_lcd.c **** }
 484              		.loc 1 64 1
 485 0038 0000A0E1 		nop
 486 003c 04D04BE2 		sub	sp, fp, #4
 487              		.cfi_def_cfa 13, 8
 488              		@ sp needed
 489 0040 0048BDE8 		pop	{fp, lr}
 490              		.cfi_restore 14
 491              		.cfi_restore 11
 492              		.cfi_def_cfa_offset 0
 493 0044 1EFF2FE1 		bx	lr
 494              	.L29:
 495              		.align	2
 496              	.L28:
 497 0048 00000000 		.word	nxt_lcd_command
 498              		.cfi_endproc
 499              	.LFE8:
 501              		.section	.text.nxt_lcd_set_ram_address_control,"ax",%progbits
 502              		.align	2
 503              		.global	nxt_lcd_set_ram_address_control
 504              		.syntax unified
 505              		.arm
 507              	nxt_lcd_set_ram_address_control:
 508              	.LFB9:
  65:./lib/nxt_lcd.c **** 
  66:./lib/nxt_lcd.c **** void
  67:./lib/nxt_lcd.c **** nxt_lcd_set_ram_address_control(uint32_t ac)
  68:./lib/nxt_lcd.c **** {
 509              		.loc 1 68 1
 510              		.cfi_startproc
 511              		@ Function supports interworking.
 512              		@ args = 0, pretend = 0, frame = 8
 513              		@ frame_needed = 1, uses_anonymous_args = 0
 514 0000 00482DE9 		push	{fp, lr}
 515              		.cfi_def_cfa_offset 8
 516              		.cfi_offset 11, -8
 517              		.cfi_offset 14, -4
 518 0004 04B08DE2 		add	fp, sp, #4
 519              		.cfi_def_cfa 11, 4
 520 0008 08D04DE2 		sub	sp, sp, #8
 521 000c 08000BE5 		str	r0, [fp, #-8]
  69:./lib/nxt_lcd.c ****   nxt_lcd_command(0x88 | (ac & 7));
 522              		.loc 1 69 30
 523 0010 08301BE5 		ldr	r3, [fp, #-8]
 524 0014 FF3003E2 		and	r3, r3, #255
 525 0018 073003E2 		and	r3, r3, #7
 526 001c FF3003E2 		and	r3, r3, #255
 527              		.loc 1 69 3
 528 0020 0330E0E1 		mvn	r3, r3
 529 0024 773003E2 		and	r3, r3, #119
 530 0028 0330E0E1 		mvn	r3, r3
 531 002c FF3003E2 		and	r3, r3, #255
 532 0030 0300A0E1 		mov	r0, r3
 533 0034 14309FE5 		ldr	r3, .L31
 534 0038 0FE0A0E1 		mov	lr, pc
 535 003c 13FF2FE1 		bx	r3
 536              	.LVL11:
  70:./lib/nxt_lcd.c **** }
 537              		.loc 1 70 1
 538 0040 0000A0E1 		nop
 539 0044 04D04BE2 		sub	sp, fp, #4
 540              		.cfi_def_cfa 13, 8
 541              		@ sp needed
 542 0048 0048BDE8 		pop	{fp, lr}
 543              		.cfi_restore 14
 544              		.cfi_restore 11
 545              		.cfi_def_cfa_offset 0
 546 004c 1EFF2FE1 		bx	lr
 547              	.L32:
 548              		.align	2
 549              	.L31:
 550 0050 00000000 		.word	nxt_lcd_command
 551              		.cfi_endproc
 552              	.LFE9:
 554              		.section	.text.nxt_lcd_set_frame_rate,"ax",%progbits
 555              		.align	2
 556              		.global	nxt_lcd_set_frame_rate
 557              		.syntax unified
 558              		.arm
 560              	nxt_lcd_set_frame_rate:
 561              	.LFB10:
  71:./lib/nxt_lcd.c **** 
  72:./lib/nxt_lcd.c **** void
  73:./lib/nxt_lcd.c **** nxt_lcd_set_frame_rate(uint32_t fr)
  74:./lib/nxt_lcd.c **** {
 562              		.loc 1 74 1
 563              		.cfi_startproc
 564              		@ Function supports interworking.
 565              		@ args = 0, pretend = 0, frame = 8
 566              		@ frame_needed = 1, uses_anonymous_args = 0
 567 0000 00482DE9 		push	{fp, lr}
 568              		.cfi_def_cfa_offset 8
 569              		.cfi_offset 11, -8
 570              		.cfi_offset 14, -4
 571 0004 04B08DE2 		add	fp, sp, #4
 572              		.cfi_def_cfa 11, 4
 573 0008 08D04DE2 		sub	sp, sp, #8
 574 000c 08000BE5 		str	r0, [fp, #-8]
  75:./lib/nxt_lcd.c ****   nxt_lcd_command(0xA0 | (fr & 1));
 575              		.loc 1 75 30
 576 0010 08301BE5 		ldr	r3, [fp, #-8]
 577 0014 FF3003E2 		and	r3, r3, #255
 578 0018 013003E2 		and	r3, r3, #1
 579 001c FF3003E2 		and	r3, r3, #255
 580              		.loc 1 75 3
 581 0020 0330E0E1 		mvn	r3, r3
 582 0024 5F3003E2 		and	r3, r3, #95
 583 0028 0330E0E1 		mvn	r3, r3
 584 002c FF3003E2 		and	r3, r3, #255
 585 0030 0300A0E1 		mov	r0, r3
 586 0034 14309FE5 		ldr	r3, .L34
 587 0038 0FE0A0E1 		mov	lr, pc
 588 003c 13FF2FE1 		bx	r3
 589              	.LVL12:
  76:./lib/nxt_lcd.c **** }
 590              		.loc 1 76 1
 591 0040 0000A0E1 		nop
 592 0044 04D04BE2 		sub	sp, fp, #4
 593              		.cfi_def_cfa 13, 8
 594              		@ sp needed
 595 0048 0048BDE8 		pop	{fp, lr}
 596              		.cfi_restore 14
 597              		.cfi_restore 11
 598              		.cfi_def_cfa_offset 0
 599 004c 1EFF2FE1 		bx	lr
 600              	.L35:
 601              		.align	2
 602              	.L34:
 603 0050 00000000 		.word	nxt_lcd_command
 604              		.cfi_endproc
 605              	.LFE10:
 607              		.section	.text.nxt_lcd_set_all_pixels_on,"ax",%progbits
 608              		.align	2
 609              		.global	nxt_lcd_set_all_pixels_on
 610              		.syntax unified
 611              		.arm
 613              	nxt_lcd_set_all_pixels_on:
 614              	.LFB11:
  77:./lib/nxt_lcd.c **** 
  78:./lib/nxt_lcd.c **** void
  79:./lib/nxt_lcd.c **** nxt_lcd_set_all_pixels_on(uint32_t on)
  80:./lib/nxt_lcd.c **** {
 615              		.loc 1 80 1
 616              		.cfi_startproc
 617              		@ Function supports interworking.
 618              		@ args = 0, pretend = 0, frame = 8
 619              		@ frame_needed = 1, uses_anonymous_args = 0
 620 0000 00482DE9 		push	{fp, lr}
 621              		.cfi_def_cfa_offset 8
 622              		.cfi_offset 11, -8
 623              		.cfi_offset 14, -4
 624 0004 04B08DE2 		add	fp, sp, #4
 625              		.cfi_def_cfa 11, 4
 626 0008 08D04DE2 		sub	sp, sp, #8
 627 000c 08000BE5 		str	r0, [fp, #-8]
  81:./lib/nxt_lcd.c ****   nxt_lcd_command(0xA4 | ((on) ? 1 : 0));
 628              		.loc 1 81 3
 629 0010 08301BE5 		ldr	r3, [fp, #-8]
 630 0014 000053E3 		cmp	r3, #0
 631 0018 0100000A 		beq	.L37
 632              		.loc 1 81 3 is_stmt 0 discriminator 1
 633 001c A530A0E3 		mov	r3, #165
 634 0020 000000EA 		b	.L38
 635              	.L37:
 636              		.loc 1 81 3 discriminator 2
 637 0024 A430A0E3 		mov	r3, #164
 638              	.L38:
 639              		.loc 1 81 3 discriminator 4
 640 0028 0300A0E1 		mov	r0, r3
 641 002c 14309FE5 		ldr	r3, .L39
 642 0030 0FE0A0E1 		mov	lr, pc
 643 0034 13FF2FE1 		bx	r3
 644              	.LVL13:
  82:./lib/nxt_lcd.c **** }
 645              		.loc 1 82 1 is_stmt 1
 646 0038 0000A0E1 		nop
 647 003c 04D04BE2 		sub	sp, fp, #4
 648              		.cfi_def_cfa 13, 8
 649              		@ sp needed
 650 0040 0048BDE8 		pop	{fp, lr}
 651              		.cfi_restore 14
 652              		.cfi_restore 11
 653              		.cfi_def_cfa_offset 0
 654 0044 1EFF2FE1 		bx	lr
 655              	.L40:
 656              		.align	2
 657              	.L39:
 658 0048 00000000 		.word	nxt_lcd_command
 659              		.cfi_endproc
 660              	.LFE11:
 662              		.section	.text.nxt_lcd_inverse_display,"ax",%progbits
 663              		.align	2
 664              		.global	nxt_lcd_inverse_display
 665              		.syntax unified
 666              		.arm
 668              	nxt_lcd_inverse_display:
 669              	.LFB12:
  83:./lib/nxt_lcd.c **** 
  84:./lib/nxt_lcd.c **** void
  85:./lib/nxt_lcd.c **** nxt_lcd_inverse_display(uint32_t on)
  86:./lib/nxt_lcd.c **** {
 670              		.loc 1 86 1
 671              		.cfi_startproc
 672              		@ Function supports interworking.
 673              		@ args = 0, pretend = 0, frame = 8
 674              		@ frame_needed = 1, uses_anonymous_args = 0
 675 0000 00482DE9 		push	{fp, lr}
 676              		.cfi_def_cfa_offset 8
 677              		.cfi_offset 11, -8
 678              		.cfi_offset 14, -4
 679 0004 04B08DE2 		add	fp, sp, #4
 680              		.cfi_def_cfa 11, 4
 681 0008 08D04DE2 		sub	sp, sp, #8
 682 000c 08000BE5 		str	r0, [fp, #-8]
  87:./lib/nxt_lcd.c ****   nxt_lcd_command(0xA6 | ((on) ? 1 : 0));
 683              		.loc 1 87 3
 684 0010 08301BE5 		ldr	r3, [fp, #-8]
 685 0014 000053E3 		cmp	r3, #0
 686 0018 0100000A 		beq	.L42
 687              		.loc 1 87 3 is_stmt 0 discriminator 1
 688 001c A730A0E3 		mov	r3, #167
 689 0020 000000EA 		b	.L43
 690              	.L42:
 691              		.loc 1 87 3 discriminator 2
 692 0024 A630A0E3 		mov	r3, #166
 693              	.L43:
 694              		.loc 1 87 3 discriminator 4
 695 0028 0300A0E1 		mov	r0, r3
 696 002c 14309FE5 		ldr	r3, .L44
 697 0030 0FE0A0E1 		mov	lr, pc
 698 0034 13FF2FE1 		bx	r3
 699              	.LVL14:
  88:./lib/nxt_lcd.c **** }
 700              		.loc 1 88 1 is_stmt 1
 701 0038 0000A0E1 		nop
 702 003c 04D04BE2 		sub	sp, fp, #4
 703              		.cfi_def_cfa 13, 8
 704              		@ sp needed
 705 0040 0048BDE8 		pop	{fp, lr}
 706              		.cfi_restore 14
 707              		.cfi_restore 11
 708              		.cfi_def_cfa_offset 0
 709 0044 1EFF2FE1 		bx	lr
 710              	.L45:
 711              		.align	2
 712              	.L44:
 713 0048 00000000 		.word	nxt_lcd_command
 714              		.cfi_endproc
 715              	.LFE12:
 717              		.section	.text.nxt_lcd_enable,"ax",%progbits
 718              		.align	2
 719              		.global	nxt_lcd_enable
 720              		.syntax unified
 721              		.arm
 723              	nxt_lcd_enable:
 724              	.LFB13:
  89:./lib/nxt_lcd.c **** 
  90:./lib/nxt_lcd.c **** void
  91:./lib/nxt_lcd.c **** nxt_lcd_enable(uint32_t on)
  92:./lib/nxt_lcd.c **** {
 725              		.loc 1 92 1
 726              		.cfi_startproc
 727              		@ Function supports interworking.
 728              		@ args = 0, pretend = 0, frame = 8
 729              		@ frame_needed = 1, uses_anonymous_args = 0
 730 0000 00482DE9 		push	{fp, lr}
 731              		.cfi_def_cfa_offset 8
 732              		.cfi_offset 11, -8
 733              		.cfi_offset 14, -4
 734 0004 04B08DE2 		add	fp, sp, #4
 735              		.cfi_def_cfa 11, 4
 736 0008 08D04DE2 		sub	sp, sp, #8
 737 000c 08000BE5 		str	r0, [fp, #-8]
  93:./lib/nxt_lcd.c ****   nxt_lcd_command(0xAE | ((on) ? 1 : 0));
 738              		.loc 1 93 3
 739 0010 08301BE5 		ldr	r3, [fp, #-8]
 740 0014 000053E3 		cmp	r3, #0
 741 0018 0100000A 		beq	.L47
 742              		.loc 1 93 3 is_stmt 0 discriminator 1
 743 001c AF30A0E3 		mov	r3, #175
 744 0020 000000EA 		b	.L48
 745              	.L47:
 746              		.loc 1 93 3 discriminator 2
 747 0024 AE30A0E3 		mov	r3, #174
 748              	.L48:
 749              		.loc 1 93 3 discriminator 4
 750 0028 0300A0E1 		mov	r0, r3
 751 002c 14309FE5 		ldr	r3, .L49
 752 0030 0FE0A0E1 		mov	lr, pc
 753 0034 13FF2FE1 		bx	r3
 754              	.LVL15:
  94:./lib/nxt_lcd.c **** }
 755              		.loc 1 94 1 is_stmt 1
 756 0038 0000A0E1 		nop
 757 003c 04D04BE2 		sub	sp, fp, #4
 758              		.cfi_def_cfa 13, 8
 759              		@ sp needed
 760 0040 0048BDE8 		pop	{fp, lr}
 761              		.cfi_restore 14
 762              		.cfi_restore 11
 763              		.cfi_def_cfa_offset 0
 764 0044 1EFF2FE1 		bx	lr
 765              	.L50:
 766              		.align	2
 767              	.L49:
 768 0048 00000000 		.word	nxt_lcd_command
 769              		.cfi_endproc
 770              	.LFE13:
 772              		.section	.text.nxt_lcd_set_map_control,"ax",%progbits
 773              		.align	2
 774              		.global	nxt_lcd_set_map_control
 775              		.syntax unified
 776              		.arm
 778              	nxt_lcd_set_map_control:
 779              	.LFB14:
  95:./lib/nxt_lcd.c **** 
  96:./lib/nxt_lcd.c **** void
  97:./lib/nxt_lcd.c **** nxt_lcd_set_map_control(uint32_t map_control)
  98:./lib/nxt_lcd.c **** {
 780              		.loc 1 98 1
 781              		.cfi_startproc
 782              		@ Function supports interworking.
 783              		@ args = 0, pretend = 0, frame = 8
 784              		@ frame_needed = 1, uses_anonymous_args = 0
 785 0000 00482DE9 		push	{fp, lr}
 786              		.cfi_def_cfa_offset 8
 787              		.cfi_offset 11, -8
 788              		.cfi_offset 14, -4
 789 0004 04B08DE2 		add	fp, sp, #4
 790              		.cfi_def_cfa 11, 4
 791 0008 08D04DE2 		sub	sp, sp, #8
 792 000c 08000BE5 		str	r0, [fp, #-8]
  99:./lib/nxt_lcd.c ****   nxt_lcd_command(0xC0 | ((map_control & 3) << 1));
 793              		.loc 1 99 45
 794 0010 08301BE5 		ldr	r3, [fp, #-8]
 795 0014 FF3003E2 		and	r3, r3, #255
 796 0018 8330A0E1 		lsl	r3, r3, #1
 797 001c FF3003E2 		and	r3, r3, #255
 798 0020 063003E2 		and	r3, r3, #6
 799 0024 FF3003E2 		and	r3, r3, #255
 800              		.loc 1 99 3
 801 0028 033DE0E1 		mvn	r3, r3, lsl #26
 802 002c 233DE0E1 		mvn	r3, r3, lsr #26
 803 0030 FF3003E2 		and	r3, r3, #255
 804 0034 0300A0E1 		mov	r0, r3
 805 0038 14309FE5 		ldr	r3, .L52
 806 003c 0FE0A0E1 		mov	lr, pc
 807 0040 13FF2FE1 		bx	r3
 808              	.LVL16:
 100:./lib/nxt_lcd.c **** }
 809              		.loc 1 100 1
 810 0044 0000A0E1 		nop
 811 0048 04D04BE2 		sub	sp, fp, #4
 812              		.cfi_def_cfa 13, 8
 813              		@ sp needed
 814 004c 0048BDE8 		pop	{fp, lr}
 815              		.cfi_restore 14
 816              		.cfi_restore 11
 817              		.cfi_def_cfa_offset 0
 818 0050 1EFF2FE1 		bx	lr
 819              	.L53:
 820              		.align	2
 821              	.L52:
 822 0054 00000000 		.word	nxt_lcd_command
 823              		.cfi_endproc
 824              	.LFE14:
 826              		.section	.text.nxt_lcd_reset,"ax",%progbits
 827              		.align	2
 828              		.global	nxt_lcd_reset
 829              		.syntax unified
 830              		.arm
 832              	nxt_lcd_reset:
 833              	.LFB15:
 101:./lib/nxt_lcd.c **** 
 102:./lib/nxt_lcd.c **** void
 103:./lib/nxt_lcd.c **** nxt_lcd_reset(void)
 104:./lib/nxt_lcd.c **** {
 834              		.loc 1 104 1
 835              		.cfi_startproc
 836              		@ Function supports interworking.
 837              		@ args = 0, pretend = 0, frame = 0
 838              		@ frame_needed = 1, uses_anonymous_args = 0
 839 0000 00482DE9 		push	{fp, lr}
 840              		.cfi_def_cfa_offset 8
 841              		.cfi_offset 11, -8
 842              		.cfi_offset 14, -4
 843 0004 04B08DE2 		add	fp, sp, #4
 844              		.cfi_def_cfa 11, 4
 105:./lib/nxt_lcd.c ****   nxt_lcd_command(0xE2);
 845              		.loc 1 105 3
 846 0008 E200A0E3 		mov	r0, #226
 847 000c 14309FE5 		ldr	r3, .L55
 848 0010 0FE0A0E1 		mov	lr, pc
 849 0014 13FF2FE1 		bx	r3
 850              	.LVL17:
 106:./lib/nxt_lcd.c **** }
 851              		.loc 1 106 1
 852 0018 0000A0E1 		nop
 853 001c 04D04BE2 		sub	sp, fp, #4
 854              		.cfi_def_cfa 13, 8
 855              		@ sp needed
 856 0020 0048BDE8 		pop	{fp, lr}
 857              		.cfi_restore 14
 858              		.cfi_restore 11
 859              		.cfi_def_cfa_offset 0
 860 0024 1EFF2FE1 		bx	lr
 861              	.L56:
 862              		.align	2
 863              	.L55:
 864 0028 00000000 		.word	nxt_lcd_command
 865              		.cfi_endproc
 866              	.LFE15:
 868              		.section	.text.nxt_lcd_set_bias_ratio,"ax",%progbits
 869              		.align	2
 870              		.global	nxt_lcd_set_bias_ratio
 871              		.syntax unified
 872              		.arm
 874              	nxt_lcd_set_bias_ratio:
 875              	.LFB16:
 107:./lib/nxt_lcd.c **** 
 108:./lib/nxt_lcd.c **** void
 109:./lib/nxt_lcd.c **** nxt_lcd_set_bias_ratio(uint32_t ratio)
 110:./lib/nxt_lcd.c **** {
 876              		.loc 1 110 1
 877              		.cfi_startproc
 878              		@ Function supports interworking.
 879              		@ args = 0, pretend = 0, frame = 8
 880              		@ frame_needed = 1, uses_anonymous_args = 0
 881 0000 00482DE9 		push	{fp, lr}
 882              		.cfi_def_cfa_offset 8
 883              		.cfi_offset 11, -8
 884              		.cfi_offset 14, -4
 885 0004 04B08DE2 		add	fp, sp, #4
 886              		.cfi_def_cfa 11, 4
 887 0008 08D04DE2 		sub	sp, sp, #8
 888 000c 08000BE5 		str	r0, [fp, #-8]
 111:./lib/nxt_lcd.c ****   nxt_lcd_command(0xE8 | (ratio & 3));
 889              		.loc 1 111 33
 890 0010 08301BE5 		ldr	r3, [fp, #-8]
 891 0014 FF3003E2 		and	r3, r3, #255
 892 0018 033003E2 		and	r3, r3, #3
 893 001c FF3003E2 		and	r3, r3, #255
 894              		.loc 1 111 3
 895 0020 0330E0E1 		mvn	r3, r3
 896 0024 173003E2 		and	r3, r3, #23
 897 0028 0330E0E1 		mvn	r3, r3
 898 002c FF3003E2 		and	r3, r3, #255
 899 0030 0300A0E1 		mov	r0, r3
 900 0034 14309FE5 		ldr	r3, .L58
 901 0038 0FE0A0E1 		mov	lr, pc
 902 003c 13FF2FE1 		bx	r3
 903              	.LVL18:
 112:./lib/nxt_lcd.c **** }
 904              		.loc 1 112 1
 905 0040 0000A0E1 		nop
 906 0044 04D04BE2 		sub	sp, fp, #4
 907              		.cfi_def_cfa 13, 8
 908              		@ sp needed
 909 0048 0048BDE8 		pop	{fp, lr}
 910              		.cfi_restore 14
 911              		.cfi_restore 11
 912              		.cfi_def_cfa_offset 0
 913 004c 1EFF2FE1 		bx	lr
 914              	.L59:
 915              		.align	2
 916              	.L58:
 917 0050 00000000 		.word	nxt_lcd_command
 918              		.cfi_endproc
 919              	.LFE16:
 921              		.section	.text.nxt_lcd_set_cursor_update,"ax",%progbits
 922              		.align	2
 923              		.global	nxt_lcd_set_cursor_update
 924              		.syntax unified
 925              		.arm
 927              	nxt_lcd_set_cursor_update:
 928              	.LFB17:
 113:./lib/nxt_lcd.c **** 
 114:./lib/nxt_lcd.c **** void
 115:./lib/nxt_lcd.c **** nxt_lcd_set_cursor_update(uint32_t on)
 116:./lib/nxt_lcd.c **** {
 929              		.loc 1 116 1
 930              		.cfi_startproc
 931              		@ Function supports interworking.
 932              		@ args = 0, pretend = 0, frame = 8
 933              		@ frame_needed = 1, uses_anonymous_args = 0
 934 0000 00482DE9 		push	{fp, lr}
 935              		.cfi_def_cfa_offset 8
 936              		.cfi_offset 11, -8
 937              		.cfi_offset 14, -4
 938 0004 04B08DE2 		add	fp, sp, #4
 939              		.cfi_def_cfa 11, 4
 940 0008 08D04DE2 		sub	sp, sp, #8
 941 000c 08000BE5 		str	r0, [fp, #-8]
 117:./lib/nxt_lcd.c ****   nxt_lcd_command(0xEE | ((on) ? 1 : 0));
 942              		.loc 1 117 3
 943 0010 08301BE5 		ldr	r3, [fp, #-8]
 944 0014 000053E3 		cmp	r3, #0
 945 0018 0100000A 		beq	.L61
 946              		.loc 1 117 3 is_stmt 0 discriminator 1
 947 001c EF30A0E3 		mov	r3, #239
 948 0020 000000EA 		b	.L62
 949              	.L61:
 950              		.loc 1 117 3 discriminator 2
 951 0024 EE30A0E3 		mov	r3, #238
 952              	.L62:
 953              		.loc 1 117 3 discriminator 4
 954 0028 0300A0E1 		mov	r0, r3
 955 002c 14309FE5 		ldr	r3, .L63
 956 0030 0FE0A0E1 		mov	lr, pc
 957 0034 13FF2FE1 		bx	r3
 958              	.LVL19:
 118:./lib/nxt_lcd.c **** }
 959              		.loc 1 118 1 is_stmt 1
 960 0038 0000A0E1 		nop
 961 003c 04D04BE2 		sub	sp, fp, #4
 962              		.cfi_def_cfa 13, 8
 963              		@ sp needed
 964 0040 0048BDE8 		pop	{fp, lr}
 965              		.cfi_restore 14
 966              		.cfi_restore 11
 967              		.cfi_def_cfa_offset 0
 968 0044 1EFF2FE1 		bx	lr
 969              	.L64:
 970              		.align	2
 971              	.L63:
 972 0048 00000000 		.word	nxt_lcd_command
 973              		.cfi_endproc
 974              	.LFE17:
 976              		.section	.text.nxt_lcd_force_update,"ax",%progbits
 977              		.align	2
 978              		.global	nxt_lcd_force_update
 979              		.syntax unified
 980              		.arm
 982              	nxt_lcd_force_update:
 983              	.LFB18:
 119:./lib/nxt_lcd.c **** 
 120:./lib/nxt_lcd.c **** void
 121:./lib/nxt_lcd.c **** nxt_lcd_force_update(void)
 122:./lib/nxt_lcd.c **** {
 984              		.loc 1 122 1
 985              		.cfi_startproc
 986              		@ Function supports interworking.
 987              		@ args = 0, pretend = 0, frame = 8
 988              		@ frame_needed = 1, uses_anonymous_args = 0
 989 0000 00482DE9 		push	{fp, lr}
 990              		.cfi_def_cfa_offset 8
 991              		.cfi_offset 11, -8
 992              		.cfi_offset 14, -4
 993 0004 04B08DE2 		add	fp, sp, #4
 994              		.cfi_def_cfa 11, 4
 995 0008 08D04DE2 		sub	sp, sp, #8
 123:./lib/nxt_lcd.c ****   // Update the screen the slow way. Works with interrupts disabled
 124:./lib/nxt_lcd.c ****   int i;
 125:./lib/nxt_lcd.c ****   uint8_t *disp = display;
 996              		.loc 1 125 12
 997 000c 84309FE5 		ldr	r3, .L68
 998 0010 003093E5 		ldr	r3, [r3]
 999 0014 0C300BE5 		str	r3, [fp, #-12]
 126:./lib/nxt_lcd.c **** 
 127:./lib/nxt_lcd.c ****   for (i = 0; i < NXT_LCD_DEPTH; i++) {
 1000              		.loc 1 127 10
 1001 0018 0030A0E3 		mov	r3, #0
 1002 001c 08300BE5 		str	r3, [fp, #-8]
 1003              		.loc 1 127 3
 1004 0020 140000EA 		b	.L66
 1005              	.L67:
 128:./lib/nxt_lcd.c ****     nxt_lcd_set_col(0);
 1006              		.loc 1 128 5
 1007 0024 0000A0E3 		mov	r0, #0
 1008 0028 6C309FE5 		ldr	r3, .L68+4
 1009 002c 0FE0A0E1 		mov	lr, pc
 1010 0030 13FF2FE1 		bx	r3
 1011              	.LVL20:
 129:./lib/nxt_lcd.c ****     nxt_lcd_set_page_address(i);
 1012              		.loc 1 129 5
 1013 0034 08301BE5 		ldr	r3, [fp, #-8]
 1014 0038 0300A0E1 		mov	r0, r3
 1015 003c 5C309FE5 		ldr	r3, .L68+8
 1016 0040 0FE0A0E1 		mov	lr, pc
 1017 0044 13FF2FE1 		bx	r3
 1018              	.LVL21:
 130:./lib/nxt_lcd.c **** 
 131:./lib/nxt_lcd.c ****     nxt_spi_write(1, disp, NXT_LCD_WIDTH);
 1019              		.loc 1 131 5
 1020 0048 6420A0E3 		mov	r2, #100
 1021 004c 0C101BE5 		ldr	r1, [fp, #-12]
 1022 0050 0100A0E3 		mov	r0, #1
 1023 0054 48309FE5 		ldr	r3, .L68+12
 1024 0058 0FE0A0E1 		mov	lr, pc
 1025 005c 13FF2FE1 		bx	r3
 1026              	.LVL22:
 132:./lib/nxt_lcd.c ****     disp += NXT_LCD_WIDTH;
 1027              		.loc 1 132 10
 1028 0060 0C301BE5 		ldr	r3, [fp, #-12]
 1029 0064 643083E2 		add	r3, r3, #100
 1030 0068 0C300BE5 		str	r3, [fp, #-12]
 127:./lib/nxt_lcd.c ****     nxt_lcd_set_col(0);
 1031              		.loc 1 127 35 discriminator 3
 1032 006c 08301BE5 		ldr	r3, [fp, #-8]
 1033 0070 013083E2 		add	r3, r3, #1
 1034 0074 08300BE5 		str	r3, [fp, #-8]
 1035              	.L66:
 127:./lib/nxt_lcd.c ****     nxt_lcd_set_col(0);
 1036              		.loc 1 127 17 discriminator 1
 1037 0078 08301BE5 		ldr	r3, [fp, #-8]
 1038 007c 070053E3 		cmp	r3, #7
 1039 0080 E7FFFFDA 		ble	.L67
 133:./lib/nxt_lcd.c ****   }
 134:./lib/nxt_lcd.c **** }
 1040              		.loc 1 134 1
 1041 0084 0000A0E1 		nop
 1042 0088 0000A0E1 		nop
 1043 008c 04D04BE2 		sub	sp, fp, #4
 1044              		.cfi_def_cfa 13, 8
 1045              		@ sp needed
 1046 0090 0048BDE8 		pop	{fp, lr}
 1047              		.cfi_restore 14
 1048              		.cfi_restore 11
 1049              		.cfi_def_cfa_offset 0
 1050 0094 1EFF2FE1 		bx	lr
 1051              	.L69:
 1052              		.align	2
 1053              	.L68:
 1054 0098 00000000 		.word	display
 1055 009c 00000000 		.word	nxt_lcd_set_col
 1056 00a0 00000000 		.word	nxt_lcd_set_page_address
 1057 00a4 00000000 		.word	nxt_spi_write
 1058              		.cfi_endproc
 1059              	.LFE18:
 1061              		.section	.text.nxt_lcd_update,"ax",%progbits
 1062              		.align	2
 1063              		.global	nxt_lcd_update
 1064              		.syntax unified
 1065              		.arm
 1067              	nxt_lcd_update:
 1068              	.LFB19:
 135:./lib/nxt_lcd.c **** 
 136:./lib/nxt_lcd.c **** 
 137:./lib/nxt_lcd.c **** void nxt_lcd_update(void)
 138:./lib/nxt_lcd.c **** {
 1069              		.loc 1 138 1
 1070              		.cfi_startproc
 1071              		@ Function supports interworking.
 1072              		@ args = 0, pretend = 0, frame = 0
 1073              		@ frame_needed = 1, uses_anonymous_args = 0
 1074 0000 00482DE9 		push	{fp, lr}
 1075              		.cfi_def_cfa_offset 8
 1076              		.cfi_offset 11, -8
 1077              		.cfi_offset 14, -4
 1078 0004 04B08DE2 		add	fp, sp, #4
 1079              		.cfi_def_cfa 11, 4
 139:./lib/nxt_lcd.c **** #define DMA_REFRESH
 140:./lib/nxt_lcd.c **** #ifdef DMA_REFRESH
 141:./lib/nxt_lcd.c ****   nxt_spi_refresh();
 1080              		.loc 1 141 3
 1081 0008 14309FE5 		ldr	r3, .L71
 1082 000c 0FE0A0E1 		mov	lr, pc
 1083 0010 13FF2FE1 		bx	r3
 1084              	.LVL23:
 142:./lib/nxt_lcd.c **** #else
 143:./lib/nxt_lcd.c ****   nxt_lcd_force_update();
 144:./lib/nxt_lcd.c **** #endif
 145:./lib/nxt_lcd.c **** }
 1085              		.loc 1 145 1
 1086 0014 0000A0E1 		nop
 1087 0018 04D04BE2 		sub	sp, fp, #4
 1088              		.cfi_def_cfa 13, 8
 1089              		@ sp needed
 1090 001c 0048BDE8 		pop	{fp, lr}
 1091              		.cfi_restore 14
 1092              		.cfi_restore 11
 1093              		.cfi_def_cfa_offset 0
 1094 0020 1EFF2FE1 		bx	lr
 1095              	.L72:
 1096              		.align	2
 1097              	.L71:
 1098 0024 00000000 		.word	nxt_spi_refresh
 1099              		.cfi_endproc
 1100              	.LFE19:
 1102              		.section	.text.nxt_lcd_power_up,"ax",%progbits
 1103              		.align	2
 1104              		.global	nxt_lcd_power_up
 1105              		.syntax unified
 1106              		.arm
 1108              	nxt_lcd_power_up:
 1109              	.LFB20:
 146:./lib/nxt_lcd.c **** 
 147:./lib/nxt_lcd.c **** void
 148:./lib/nxt_lcd.c **** nxt_lcd_power_up(void)
 149:./lib/nxt_lcd.c **** {
 1110              		.loc 1 149 1
 1111              		.cfi_startproc
 1112              		@ Function supports interworking.
 1113              		@ args = 0, pretend = 0, frame = 0
 1114              		@ frame_needed = 1, uses_anonymous_args = 0
 1115 0000 00482DE9 		push	{fp, lr}
 1116              		.cfi_def_cfa_offset 8
 1117              		.cfi_offset 11, -8
 1118              		.cfi_offset 14, -4
 1119 0004 04B08DE2 		add	fp, sp, #4
 1120              		.cfi_def_cfa 11, 4
 150:./lib/nxt_lcd.c **** 
 151:./lib/nxt_lcd.c ****   systick_wait_ms(20);
 1121              		.loc 1 151 3
 1122 0008 1400A0E3 		mov	r0, #20
 1123 000c A8309FE5 		ldr	r3, .L74
 1124 0010 0FE0A0E1 		mov	lr, pc
 1125 0014 13FF2FE1 		bx	r3
 1126              	.LVL24:
 152:./lib/nxt_lcd.c ****   nxt_lcd_reset();
 1127              		.loc 1 152 3
 1128 0018 A0309FE5 		ldr	r3, .L74+4
 1129 001c 0FE0A0E1 		mov	lr, pc
 1130 0020 13FF2FE1 		bx	r3
 1131              	.LVL25:
 153:./lib/nxt_lcd.c ****   systick_wait_ms(20);
 1132              		.loc 1 153 3
 1133 0024 1400A0E3 		mov	r0, #20
 1134 0028 8C309FE5 		ldr	r3, .L74
 1135 002c 0FE0A0E1 		mov	lr, pc
 1136 0030 13FF2FE1 		bx	r3
 1137              	.LVL26:
 154:./lib/nxt_lcd.c ****   nxt_lcd_set_multiplex_rate(3);	// 1/65
 1138              		.loc 1 154 3
 1139 0034 0300A0E3 		mov	r0, #3
 1140 0038 84309FE5 		ldr	r3, .L74+8
 1141 003c 0FE0A0E1 		mov	lr, pc
 1142 0040 13FF2FE1 		bx	r3
 1143              	.LVL27:
 155:./lib/nxt_lcd.c ****   nxt_lcd_set_bias_ratio(3);	// 1/9
 1144              		.loc 1 155 3
 1145 0044 0300A0E3 		mov	r0, #3
 1146 0048 78309FE5 		ldr	r3, .L74+12
 1147 004c 0FE0A0E1 		mov	lr, pc
 1148 0050 13FF2FE1 		bx	r3
 1149              	.LVL28:
 156:./lib/nxt_lcd.c ****   nxt_lcd_set_pot(0x60);	// ?? 9V??
 1150              		.loc 1 156 3
 1151 0054 6000A0E3 		mov	r0, #96
 1152 0058 6C309FE5 		ldr	r3, .L74+16
 1153 005c 0FE0A0E1 		mov	lr, pc
 1154 0060 13FF2FE1 		bx	r3
 1155              	.LVL29:
 157:./lib/nxt_lcd.c **** 
 158:./lib/nxt_lcd.c ****   nxt_lcd_set_ram_address_control(1); // auto wrap
 1156              		.loc 1 158 3
 1157 0064 0100A0E3 		mov	r0, #1
 1158 0068 60309FE5 		ldr	r3, .L74+20
 1159 006c 0FE0A0E1 		mov	lr, pc
 1160 0070 13FF2FE1 		bx	r3
 1161              	.LVL30:
 159:./lib/nxt_lcd.c ****   nxt_lcd_set_map_control(0x02); // mirror in y
 1162              		.loc 1 159 3
 1163 0074 0200A0E3 		mov	r0, #2
 1164 0078 54309FE5 		ldr	r3, .L74+24
 1165 007c 0FE0A0E1 		mov	lr, pc
 1166 0080 13FF2FE1 		bx	r3
 1167              	.LVL31:
 160:./lib/nxt_lcd.c **** 
 161:./lib/nxt_lcd.c ****   nxt_spi_set_display(display);
 1168              		.loc 1 161 3
 1169 0084 4C309FE5 		ldr	r3, .L74+28
 1170 0088 003093E5 		ldr	r3, [r3]
 1171 008c 0300A0E1 		mov	r0, r3
 1172 0090 44309FE5 		ldr	r3, .L74+32
 1173 0094 0FE0A0E1 		mov	lr, pc
 1174 0098 13FF2FE1 		bx	r3
 1175              	.LVL32:
 162:./lib/nxt_lcd.c ****   nxt_lcd_enable(1);
 1176              		.loc 1 162 3
 1177 009c 0100A0E3 		mov	r0, #1
 1178 00a0 38309FE5 		ldr	r3, .L74+36
 1179 00a4 0FE0A0E1 		mov	lr, pc
 1180 00a8 13FF2FE1 		bx	r3
 1181              	.LVL33:
 163:./lib/nxt_lcd.c **** 
 164:./lib/nxt_lcd.c **** }
 1182              		.loc 1 164 1
 1183 00ac 0000A0E1 		nop
 1184 00b0 04D04BE2 		sub	sp, fp, #4
 1185              		.cfi_def_cfa 13, 8
 1186              		@ sp needed
 1187 00b4 0048BDE8 		pop	{fp, lr}
 1188              		.cfi_restore 14
 1189              		.cfi_restore 11
 1190              		.cfi_def_cfa_offset 0
 1191 00b8 1EFF2FE1 		bx	lr
 1192              	.L75:
 1193              		.align	2
 1194              	.L74:
 1195 00bc 00000000 		.word	systick_wait_ms
 1196 00c0 00000000 		.word	nxt_lcd_reset
 1197 00c4 00000000 		.word	nxt_lcd_set_multiplex_rate
 1198 00c8 00000000 		.word	nxt_lcd_set_bias_ratio
 1199 00cc 00000000 		.word	nxt_lcd_set_pot
 1200 00d0 00000000 		.word	nxt_lcd_set_ram_address_control
 1201 00d4 00000000 		.word	nxt_lcd_set_map_control
 1202 00d8 00000000 		.word	display
 1203 00dc 00000000 		.word	nxt_spi_set_display
 1204 00e0 00000000 		.word	nxt_lcd_enable
 1205              		.cfi_endproc
 1206              	.LFE20:
 1208              		.section	.text.nxt_lcd_power_down,"ax",%progbits
 1209              		.align	2
 1210              		.global	nxt_lcd_power_down
 1211              		.syntax unified
 1212              		.arm
 1214              	nxt_lcd_power_down:
 1215              	.LFB21:
 165:./lib/nxt_lcd.c **** 
 166:./lib/nxt_lcd.c **** void
 167:./lib/nxt_lcd.c **** nxt_lcd_power_down(void)
 168:./lib/nxt_lcd.c **** {
 1216              		.loc 1 168 1
 1217              		.cfi_startproc
 1218              		@ Function supports interworking.
 1219              		@ args = 0, pretend = 0, frame = 0
 1220              		@ frame_needed = 1, uses_anonymous_args = 0
 1221 0000 00482DE9 		push	{fp, lr}
 1222              		.cfi_def_cfa_offset 8
 1223              		.cfi_offset 11, -8
 1224              		.cfi_offset 14, -4
 1225 0004 04B08DE2 		add	fp, sp, #4
 1226              		.cfi_def_cfa 11, 4
 169:./lib/nxt_lcd.c **** 	nxt_lcd_reset();
 1227              		.loc 1 169 2
 1228 0008 14309FE5 		ldr	r3, .L77
 1229 000c 0FE0A0E1 		mov	lr, pc
 1230 0010 13FF2FE1 		bx	r3
 1231              	.LVL34:
 170:./lib/nxt_lcd.c **** }
 1232              		.loc 1 170 1
 1233 0014 0000A0E1 		nop
 1234 0018 04D04BE2 		sub	sp, fp, #4
 1235              		.cfi_def_cfa 13, 8
 1236              		@ sp needed
 1237 001c 0048BDE8 		pop	{fp, lr}
 1238              		.cfi_restore 14
 1239              		.cfi_restore 11
 1240              		.cfi_def_cfa_offset 0
 1241 0020 1EFF2FE1 		bx	lr
 1242              	.L78:
 1243              		.align	2
 1244              	.L77:
 1245 0024 00000000 		.word	nxt_lcd_reset
 1246              		.cfi_endproc
 1247              	.LFE21:
 1249              		.section	.text.nxt_lcd_init,"ax",%progbits
 1250              		.align	2
 1251              		.global	nxt_lcd_init
 1252              		.syntax unified
 1253              		.arm
 1255              	nxt_lcd_init:
 1256              	.LFB22:
 171:./lib/nxt_lcd.c **** 
 172:./lib/nxt_lcd.c **** void
 173:./lib/nxt_lcd.c **** nxt_lcd_init(/*const DJ */ uint8_t *disp)
 174:./lib/nxt_lcd.c **** {
 1257              		.loc 1 174 1
 1258              		.cfi_startproc
 1259              		@ Function supports interworking.
 1260              		@ args = 0, pretend = 0, frame = 8
 1261              		@ frame_needed = 1, uses_anonymous_args = 0
 1262 0000 00482DE9 		push	{fp, lr}
 1263              		.cfi_def_cfa_offset 8
 1264              		.cfi_offset 11, -8
 1265              		.cfi_offset 14, -4
 1266 0004 04B08DE2 		add	fp, sp, #4
 1267              		.cfi_def_cfa 11, 4
 1268 0008 08D04DE2 		sub	sp, sp, #8
 1269 000c 08000BE5 		str	r0, [fp, #-8]
 175:./lib/nxt_lcd.c ****   display = disp;
 1270              		.loc 1 175 11
 1271 0010 2C209FE5 		ldr	r2, .L80
 1272 0014 08301BE5 		ldr	r3, [fp, #-8]
 1273 0018 003082E5 		str	r3, [r2]
 176:./lib/nxt_lcd.c ****   nxt_spi_init();
 1274              		.loc 1 176 3
 1275 001c 24309FE5 		ldr	r3, .L80+4
 1276 0020 0FE0A0E1 		mov	lr, pc
 1277 0024 13FF2FE1 		bx	r3
 1278              	.LVL35:
 177:./lib/nxt_lcd.c **** 
 178:./lib/nxt_lcd.c ****   nxt_lcd_power_up();
 1279              		.loc 1 178 3
 1280 0028 1C309FE5 		ldr	r3, .L80+8
 1281 002c 0FE0A0E1 		mov	lr, pc
 1282 0030 13FF2FE1 		bx	r3
 1283              	.LVL36:
 179:./lib/nxt_lcd.c **** 
 180:./lib/nxt_lcd.c **** }
 1284              		.loc 1 180 1
 1285 0034 0000A0E1 		nop
 1286 0038 04D04BE2 		sub	sp, fp, #4
 1287              		.cfi_def_cfa 13, 8
 1288              		@ sp needed
 1289 003c 0048BDE8 		pop	{fp, lr}
 1290              		.cfi_restore 14
 1291              		.cfi_restore 11
 1292              		.cfi_def_cfa_offset 0
 1293 0040 1EFF2FE1 		bx	lr
 1294              	.L81:
 1295              		.align	2
 1296              	.L80:
 1297 0044 00000000 		.word	display
 1298 0048 00000000 		.word	nxt_spi_init
 1299 004c 00000000 		.word	nxt_lcd_power_up
 1300              		.cfi_endproc
 1301              	.LFE22:
 1303              		.text
 1304              	.Letext0:
 1305              		.file 2 "/usr/lib/gcc/arm-gnu-toolchain-14.3.rel1-x86_64-arm-none-eabi/arm-none-eabi/include/machi
 1306              		.file 3 "/usr/lib/gcc/arm-gnu-toolchain-14.3.rel1-x86_64-arm-none-eabi/arm-none-eabi/include/sys/_
 1307              		.file 4 "./lib/nxt_spi.h"
 1308              		.file 5 "./lib/systick.h"
DEFINED SYMBOLS
                            *ABS*:00000000 nxt_lcd.c
     /tmp/ccX4kfUQ.s:19     .bss:00000000 $d
     /tmp/ccX4kfUQ.s:20     .bss:00000000 display
     /tmp/ccX4kfUQ.s:24     .text.nxt_lcd_command:00000000 $a
     /tmp/ccX4kfUQ.s:29     .text.nxt_lcd_command:00000000 nxt_lcd_command
     /tmp/ccX4kfUQ.s:70     .text.nxt_lcd_command:00000048 $d
     /tmp/ccX4kfUQ.s:75     .text.nxt_lcd_set_col:00000000 $a
     /tmp/ccX4kfUQ.s:80     .text.nxt_lcd_set_col:00000000 nxt_lcd_set_col
     /tmp/ccX4kfUQ.s:133    .text.nxt_lcd_set_col:0000006c $d
     /tmp/ccX4kfUQ.s:138    .text.nxt_lcd_set_multiplex_rate:00000000 $a
     /tmp/ccX4kfUQ.s:143    .text.nxt_lcd_set_multiplex_rate:00000000 nxt_lcd_set_multiplex_rate
     /tmp/ccX4kfUQ.s:184    .text.nxt_lcd_set_multiplex_rate:00000048 $d
     /tmp/ccX4kfUQ.s:189    .text.nxt_lcd_set_temp_comp:00000000 $a
     /tmp/ccX4kfUQ.s:194    .text.nxt_lcd_set_temp_comp:00000000 nxt_lcd_set_temp_comp
     /tmp/ccX4kfUQ.s:235    .text.nxt_lcd_set_temp_comp:00000048 $d
     /tmp/ccX4kfUQ.s:240    .text.nxt_lcd_set_panel_loading:00000000 $a
     /tmp/ccX4kfUQ.s:245    .text.nxt_lcd_set_panel_loading:00000000 nxt_lcd_set_panel_loading
     /tmp/ccX4kfUQ.s:290    .text.nxt_lcd_set_panel_loading:00000048 $d
     /tmp/ccX4kfUQ.s:295    .text.nxt_lcd_set_pump_control:00000000 $a
     /tmp/ccX4kfUQ.s:300    .text.nxt_lcd_set_pump_control:00000000 nxt_lcd_set_pump_control
     /tmp/ccX4kfUQ.s:341    .text.nxt_lcd_set_pump_control:00000048 $d
     /tmp/ccX4kfUQ.s:346    .text.nxt_lcd_set_scroll_line:00000000 $a
     /tmp/ccX4kfUQ.s:351    .text.nxt_lcd_set_scroll_line:00000000 nxt_lcd_set_scroll_line
     /tmp/ccX4kfUQ.s:392    .text.nxt_lcd_set_scroll_line:00000048 $d
     /tmp/ccX4kfUQ.s:397    .text.nxt_lcd_set_page_address:00000000 $a
     /tmp/ccX4kfUQ.s:402    .text.nxt_lcd_set_page_address:00000000 nxt_lcd_set_page_address
     /tmp/ccX4kfUQ.s:445    .text.nxt_lcd_set_page_address:00000050 $d
     /tmp/ccX4kfUQ.s:450    .text.nxt_lcd_set_pot:00000000 $a
     /tmp/ccX4kfUQ.s:455    .text.nxt_lcd_set_pot:00000000 nxt_lcd_set_pot
     /tmp/ccX4kfUQ.s:497    .text.nxt_lcd_set_pot:00000048 $d
     /tmp/ccX4kfUQ.s:502    .text.nxt_lcd_set_ram_address_control:00000000 $a
     /tmp/ccX4kfUQ.s:507    .text.nxt_lcd_set_ram_address_control:00000000 nxt_lcd_set_ram_address_control
     /tmp/ccX4kfUQ.s:550    .text.nxt_lcd_set_ram_address_control:00000050 $d
     /tmp/ccX4kfUQ.s:555    .text.nxt_lcd_set_frame_rate:00000000 $a
     /tmp/ccX4kfUQ.s:560    .text.nxt_lcd_set_frame_rate:00000000 nxt_lcd_set_frame_rate
     /tmp/ccX4kfUQ.s:603    .text.nxt_lcd_set_frame_rate:00000050 $d
     /tmp/ccX4kfUQ.s:608    .text.nxt_lcd_set_all_pixels_on:00000000 $a
     /tmp/ccX4kfUQ.s:613    .text.nxt_lcd_set_all_pixels_on:00000000 nxt_lcd_set_all_pixels_on
     /tmp/ccX4kfUQ.s:658    .text.nxt_lcd_set_all_pixels_on:00000048 $d
     /tmp/ccX4kfUQ.s:663    .text.nxt_lcd_inverse_display:00000000 $a
     /tmp/ccX4kfUQ.s:668    .text.nxt_lcd_inverse_display:00000000 nxt_lcd_inverse_display
     /tmp/ccX4kfUQ.s:713    .text.nxt_lcd_inverse_display:00000048 $d
     /tmp/ccX4kfUQ.s:718    .text.nxt_lcd_enable:00000000 $a
     /tmp/ccX4kfUQ.s:723    .text.nxt_lcd_enable:00000000 nxt_lcd_enable
     /tmp/ccX4kfUQ.s:768    .text.nxt_lcd_enable:00000048 $d
     /tmp/ccX4kfUQ.s:773    .text.nxt_lcd_set_map_control:00000000 $a
     /tmp/ccX4kfUQ.s:778    .text.nxt_lcd_set_map_control:00000000 nxt_lcd_set_map_control
     /tmp/ccX4kfUQ.s:822    .text.nxt_lcd_set_map_control:00000054 $d
     /tmp/ccX4kfUQ.s:827    .text.nxt_lcd_reset:00000000 $a
     /tmp/ccX4kfUQ.s:832    .text.nxt_lcd_reset:00000000 nxt_lcd_reset
     /tmp/ccX4kfUQ.s:864    .text.nxt_lcd_reset:00000028 $d
     /tmp/ccX4kfUQ.s:869    .text.nxt_lcd_set_bias_ratio:00000000 $a
     /tmp/ccX4kfUQ.s:874    .text.nxt_lcd_set_bias_ratio:00000000 nxt_lcd_set_bias_ratio
     /tmp/ccX4kfUQ.s:917    .text.nxt_lcd_set_bias_ratio:00000050 $d
     /tmp/ccX4kfUQ.s:922    .text.nxt_lcd_set_cursor_update:00000000 $a
     /tmp/ccX4kfUQ.s:927    .text.nxt_lcd_set_cursor_update:00000000 nxt_lcd_set_cursor_update
     /tmp/ccX4kfUQ.s:972    .text.nxt_lcd_set_cursor_update:00000048 $d
     /tmp/ccX4kfUQ.s:977    .text.nxt_lcd_force_update:00000000 $a
     /tmp/ccX4kfUQ.s:982    .text.nxt_lcd_force_update:00000000 nxt_lcd_force_update
     /tmp/ccX4kfUQ.s:1054   .text.nxt_lcd_force_update:00000098 $d
     /tmp/ccX4kfUQ.s:1062   .text.nxt_lcd_update:00000000 $a
     /tmp/ccX4kfUQ.s:1067   .text.nxt_lcd_update:00000000 nxt_lcd_update
     /tmp/ccX4kfUQ.s:1098   .text.nxt_lcd_update:00000024 $d
     /tmp/ccX4kfUQ.s:1103   .text.nxt_lcd_power_up:00000000 $a
     /tmp/ccX4kfUQ.s:1108   .text.nxt_lcd_power_up:00000000 nxt_lcd_power_up
     /tmp/ccX4kfUQ.s:1195   .text.nxt_lcd_power_up:000000bc $d
     /tmp/ccX4kfUQ.s:1209   .text.nxt_lcd_power_down:00000000 $a
     /tmp/ccX4kfUQ.s:1214   .text.nxt_lcd_power_down:00000000 nxt_lcd_power_down
     /tmp/ccX4kfUQ.s:1245   .text.nxt_lcd_power_down:00000024 $d
     /tmp/ccX4kfUQ.s:1250   .text.nxt_lcd_init:00000000 $a
     /tmp/ccX4kfUQ.s:1255   .text.nxt_lcd_init:00000000 nxt_lcd_init
     /tmp/ccX4kfUQ.s:1297   .text.nxt_lcd_init:00000044 $d

UNDEFINED SYMBOLS
nxt_spi_write
nxt_spi_refresh
systick_wait_ms
nxt_spi_set_display
nxt_spi_init
