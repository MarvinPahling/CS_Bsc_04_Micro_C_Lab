#include "helper.h"

//buf    -> Buffer mit mindestens 12 Zeichen Platz
//val    -> zu konvertierender Wert
//places -> Mindestbreite (Ausgabe ist rechtsbündig)
//sign   -> Vorzeichen 1->'-'
//return -> Zeiger auf 1. Zeichen des konvertierten Strings
char *unsigned2string(char buf[12], unsigned int val, unsigned int places, unsigned int sign)
{
  char *p = &buf[11];
  unsigned int   p_count = 0;

  *p = 0;

  if (places > 11)
    places = 11;

  while (val) {
    p--;
    p_count++;
    *p = (val % 10) + '0';
    val /= 10;
  }

  if (!p_count) {
    p--;
    p_count++;
    *p = '0';
  }

  if (sign) {
    p--;
    p_count++;
    *p = '-';
  }

  while (p_count < places) {
    p--;
    p_count++;
    *p = ' ';
  }
  return p;
}

//buf    -> Buffer mit mindestens 9 Zeichen Platz
//val    -> zu konvertierender Wert
//places -> Mindestbreite (mit '0' auffüllen, wenn Zahl 'kleiner' ist)
//return -> Zeiger auf 1. Zeichen des konvertierten Strings
char *hex2string(char buf[9],unsigned int val, unsigned int places)
{
  char *p = &buf[8];
  unsigned int p_count = 0;

  *p = 0;

  if (places > 8)
    places = 8;

  while (val) {
    p--;
    p_count++;
    *p = "0123456789ABCDEF"[val & 0x0f];
    val >>= 4;
  }

  while (p_count < places) {
    p--;
    p_count++;
    *p = '0';
  }

  return p;
}
