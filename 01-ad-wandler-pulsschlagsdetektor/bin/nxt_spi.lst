   1              		.cpu arm7tdmi
   2              		.arch armv4t
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 0
  12              		.eabi_attribute 18, 4
  13              		.file	"nxt_spi.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.file 1 "./lib/nxt_spi.c"
  18              		.global	display
  19              		.bss
  20              		.align	2
  23              	display:
  24 0000 00000000 		.space	4
  25              		.global	dirty
  28              	dirty:
  29 0004 00       		.space	1
  30              		.global	page
  33              	page:
  34 0005 00       		.space	1
  35              		.global	data
  36 0006 0000     		.align	2
  39              	data:
  40 0008 00000000 		.space	4
  41              		.global	mode
  42              		.data
  45              	mode:
  46 0000 FF       		.byte	-1
  47              		.section	.text.spi_set_mode,"ax",%progbits
  48              		.align	2
  49              		.syntax unified
  50              		.arm
  52              	spi_set_mode:
  53              	.LFB0:
   1:./lib/nxt_spi.c **** 
   2:./lib/nxt_spi.c **** #include "nxt_spi.h"
   3:./lib/nxt_spi.c **** #include "../AT91SAM7S64.h"
   4:./lib/nxt_spi.c **** 
   5:./lib/nxt_spi.c **** #include "aic.h"
   6:./lib/nxt_spi.c **** 
   7:./lib/nxt_spi.c **** 
   8:./lib/nxt_spi.c **** /*
   9:./lib/nxt_spi.c ****  * Note that this is not a normal SPI interface, 
  10:./lib/nxt_spi.c ****  * it is a bodged version as used by the NXT's 
  11:./lib/nxt_spi.c ****  * display.
  12:./lib/nxt_spi.c ****  *
  13:./lib/nxt_spi.c ****  * The display does not use MISO because you can
  14:./lib/nxt_spi.c ****  * only write to it in serial mode.
  15:./lib/nxt_spi.c ****  *
  16:./lib/nxt_spi.c ****  * Instead, the MISO pin is not used by the SPI
  17:./lib/nxt_spi.c ****  * and is instead driven as a PIO pin for controlling CD.
  18:./lib/nxt_spi.c ****  *
  19:./lib/nxt_spi.c ****  * Addional notes from Andy Shaw
  20:./lib/nxt_spi.c ****  * The following code now contains the capability to perform display
  21:./lib/nxt_spi.c ****  * updates using dma, This code was inspired by the nxos lcd/spi code
  22:./lib/nxt_spi.c ****  * (Thanks guys). More details of nxos can be found at:
  23:./lib/nxt_spi.c ****  * http://nxt.natulte.net/nxos/trac
  24:./lib/nxt_spi.c ****  *
  25:./lib/nxt_spi.c ****  */
  26:./lib/nxt_spi.c **** 
  27:./lib/nxt_spi.c **** #define CS_PIN	(1<<10)
  28:./lib/nxt_spi.c **** #define CD_PIN  (1<<12)
  29:./lib/nxt_spi.c **** const uint8_t *display = (uint8_t *) 0;
  30:./lib/nxt_spi.c **** volatile uint8_t dirty = 0;
  31:./lib/nxt_spi.c **** volatile uint8_t page = 0;
  32:./lib/nxt_spi.c **** volatile const uint8_t *data = (uint8_t *) 0;
  33:./lib/nxt_spi.c **** uint8_t mode = 0xff;
  34:./lib/nxt_spi.c **** 
  35:./lib/nxt_spi.c **** 
  36:./lib/nxt_spi.c **** static void spi_set_mode(uint8_t m)
  37:./lib/nxt_spi.c **** {
  54              		.loc 1 37 1
  55              		.cfi_startproc
  56              		@ Function supports interworking.
  57              		@ args = 0, pretend = 0, frame = 16
  58              		@ frame_needed = 1, uses_anonymous_args = 0
  59              		@ link register save eliminated.
  60 0000 04B02DE5 		str	fp, [sp, #-4]!
  61              		.cfi_def_cfa_offset 4
  62              		.cfi_offset 11, -4
  63 0004 00B08DE2 		add	fp, sp, #0
  64              		.cfi_def_cfa_register 11
  65 0008 14D04DE2 		sub	sp, sp, #20
  66 000c 0030A0E1 		mov	r3, r0
  67 0010 0D304BE5 		strb	r3, [fp, #-13]
  38:./lib/nxt_spi.c ****   uint32_t status;
  39:./lib/nxt_spi.c **** 
  40:./lib/nxt_spi.c ****   /* nothing to do if we are already in the correct mode */
  41:./lib/nxt_spi.c ****   if (m == mode) return;
  68              		.loc 1 41 9
  69 0014 70309FE5 		ldr	r3, .L7
  70 0018 0030D3E5 		ldrb	r3, [r3]	@ zero_extendqisi2
  71              		.loc 1 41 6
  72 001c 0D205BE5 		ldrb	r2, [fp, #-13]	@ zero_extendqisi2
  73 0020 030052E1 		cmp	r2, r3
  74 0024 1400000A 		beq	.L6
  75              	.L2:
  42:./lib/nxt_spi.c ****   
  43:./lib/nxt_spi.c ****   /* Wait until all bytes have been sent */
  44:./lib/nxt_spi.c ****   do {
  45:./lib/nxt_spi.c ****     status = *AT91C_SPI_SR;
  76              		.loc 1 45 14
  77 0028 60309FE5 		ldr	r3, .L7+4
  78              		.loc 1 45 12
  79 002c 003093E5 		ldr	r3, [r3]
  80 0030 08300BE5 		str	r3, [fp, #-8]
  46:./lib/nxt_spi.c ****   } while (!(status & 0x200));
  81              		.loc 1 46 21 discriminator 1
  82 0034 08301BE5 		ldr	r3, [fp, #-8]
  83 0038 023C03E2 		and	r3, r3, #512
  84              		.loc 1 46 12 discriminator 1
  85 003c 000053E3 		cmp	r3, #0
  86 0040 F8FFFF0A 		beq	.L2
  47:./lib/nxt_spi.c ****   /* Set command or data mode */
  48:./lib/nxt_spi.c ****   if (m)
  87              		.loc 1 48 6
  88 0044 0D305BE5 		ldrb	r3, [fp, #-13]	@ zero_extendqisi2
  89 0048 000053E3 		cmp	r3, #0
  90 004c 0300000A 		beq	.L4
  49:./lib/nxt_spi.c ****     *AT91C_PIOA_SODR = CD_PIN;
  91              		.loc 1 49 5
  92 0050 3C309FE5 		ldr	r3, .L7+8
  93              		.loc 1 49 22
  94 0054 012AA0E3 		mov	r2, #4096
  95 0058 002083E5 		str	r2, [r3]
  96 005c 020000EA 		b	.L5
  97              	.L4:
  50:./lib/nxt_spi.c ****   else
  51:./lib/nxt_spi.c ****     *AT91C_PIOA_CODR = CD_PIN;
  98              		.loc 1 51 5
  99 0060 30309FE5 		ldr	r3, .L7+12
 100              		.loc 1 51 22
 101 0064 012AA0E3 		mov	r2, #4096
 102 0068 002083E5 		str	r2, [r3]
 103              	.L5:
  52:./lib/nxt_spi.c ****   /* remember the current mode */
  53:./lib/nxt_spi.c ****   mode = m;
 104              		.loc 1 53 8
 105 006c 18209FE5 		ldr	r2, .L7
 106 0070 0D305BE5 		ldrb	r3, [fp, #-13]
 107 0074 0030C2E5 		strb	r3, [r2]
 108 0078 000000EA 		b	.L1
 109              	.L6:
  41:./lib/nxt_spi.c ****   
 110              		.loc 1 41 18
 111 007c 0000A0E1 		nop
 112              	.L1:
  54:./lib/nxt_spi.c **** }
 113              		.loc 1 54 1
 114 0080 00D08BE2 		add	sp, fp, #0
 115              		.cfi_def_cfa_register 13
 116              		@ sp needed
 117 0084 04B09DE4 		ldr	fp, [sp], #4
 118              		.cfi_restore 11
 119              		.cfi_def_cfa_offset 0
 120 0088 1EFF2FE1 		bx	lr
 121              	.L8:
 122              		.align	2
 123              	.L7:
 124 008c 00000000 		.word	mode
 125 0090 1000FEFF 		.word	-131056
 126 0094 30F4FFFF 		.word	-3024
 127 0098 34F4FFFF 		.word	-3020
 128              		.cfi_endproc
 129              	.LFE0:
 131              		.section	.text.spi_isr_C,"ax",%progbits
 132              		.align	2
 133              		.global	spi_isr_C
 134              		.syntax unified
 135              		.arm
 137              	spi_isr_C:
 138              	.LFB1:
  55:./lib/nxt_spi.c **** 
  56:./lib/nxt_spi.c **** 
  57:./lib/nxt_spi.c **** void
  58:./lib/nxt_spi.c **** spi_isr_C(void)
  59:./lib/nxt_spi.c **** {
 139              		.loc 1 59 1
 140              		.cfi_startproc
 141              		@ Function supports interworking.
 142              		@ args = 0, pretend = 0, frame = 0
 143              		@ frame_needed = 1, uses_anonymous_args = 0
 144 0000 00482DE9 		push	{fp, lr}
 145              		.cfi_def_cfa_offset 8
 146              		.cfi_offset 11, -8
 147              		.cfi_offset 14, -4
 148 0004 04B08DE2 		add	fp, sp, #4
 149              		.cfi_def_cfa 11, 4
  60:./lib/nxt_spi.c ****   if (page == 0)
 150              		.loc 1 60 12
 151 0008 C8309FE5 		ldr	r3, .L13
 152 000c 0030D3E5 		ldrb	r3, [r3]
 153 0010 FF3003E2 		and	r3, r3, #255
 154              		.loc 1 60 6
 155 0014 000053E3 		cmp	r3, #0
 156 0018 1000001A 		bne	.L10
  61:./lib/nxt_spi.c ****   {
  62:./lib/nxt_spi.c ****     /* Check to see if we have data to display */
  63:./lib/nxt_spi.c ****     if (dirty != 0)
 157              		.loc 1 63 15
 158 001c B8309FE5 		ldr	r3, .L13+4
 159 0020 0030D3E5 		ldrb	r3, [r3]
 160 0024 FF3003E2 		and	r3, r3, #255
 161              		.loc 1 63 8
 162 0028 000053E3 		cmp	r3, #0
 163 002c 0700000A 		beq	.L11
  64:./lib/nxt_spi.c ****     {
  65:./lib/nxt_spi.c ****       data = display;
 164              		.loc 1 65 12
 165 0030 A8309FE5 		ldr	r3, .L13+8
 166 0034 003093E5 		ldr	r3, [r3]
 167 0038 A4209FE5 		ldr	r2, .L13+12
 168 003c 003082E5 		str	r3, [r2]
  66:./lib/nxt_spi.c ****       dirty = 0;
 169              		.loc 1 66 13
 170 0040 94309FE5 		ldr	r3, .L13+4
 171 0044 0020A0E3 		mov	r2, #0
 172 0048 0020C3E5 		strb	r2, [r3]
 173 004c 030000EA 		b	.L10
 174              	.L11:
  67:./lib/nxt_spi.c ****     }
  68:./lib/nxt_spi.c ****     else
  69:./lib/nxt_spi.c ****     {
  70:./lib/nxt_spi.c ****       /* No so turn things off. It will get re-set if we ever have anything
  71:./lib/nxt_spi.c ****          to display
  72:./lib/nxt_spi.c ****       */
  73:./lib/nxt_spi.c ****       *AT91C_SPI_IDR = AT91C_SPI_ENDTX;
 175              		.loc 1 73 7
 176 0050 90309FE5 		ldr	r3, .L13+16
 177              		.loc 1 73 22
 178 0054 2020A0E3 		mov	r2, #32
 179 0058 002083E5 		str	r2, [r3]
  74:./lib/nxt_spi.c ****       return;
 180              		.loc 1 74 7
 181 005c 1A0000EA 		b	.L9
 182              	.L10:
  75:./lib/nxt_spi.c ****     }
  76:./lib/nxt_spi.c ****   }
  77:./lib/nxt_spi.c ****   /* Make sure we are in data mode */
  78:./lib/nxt_spi.c ****   spi_set_mode(1);
 183              		.loc 1 78 3
 184 0060 0100A0E3 		mov	r0, #1
 185 0064 80309FE5 		ldr	r3, .L13+20
 186 0068 0FE0A0E1 		mov	lr, pc
 187 006c 13FF2FE1 		bx	r3
 188              	.LVL0:
  79:./lib/nxt_spi.c ****   /* now do the transfer. We make use of the auto-wrap function so simply
  80:./lib/nxt_spi.c ****    * need to send 8*132 bytes to get back to where we started. However the
  81:./lib/nxt_spi.c ****    * display buffer is structured as series of 100 byte lines, so we need to
  82:./lib/nxt_spi.c ****    * get tricky. I've made the display one line longer (9 lines) and so when we
  83:./lib/nxt_spi.c ****    * send the data we send 100 bytes from the actual line plus 32 padding bytes
  84:./lib/nxt_spi.c ****    * (that are not actually seen), from the next line. The extra line means
  85:./lib/nxt_spi.c ****    * that this is safe to do. If we can redefine the display as a 8*132 then
  86:./lib/nxt_spi.c ****    * we could just use a single dma transfer (instead of 8, 132 byte ones).
  87:./lib/nxt_spi.c ****    * However I'm not sure if this would be safe.
  88:./lib/nxt_spi.c ****    */
  89:./lib/nxt_spi.c ****   *AT91C_SPI_TNPR = (uint32_t) data;
 189              		.loc 1 89 21
 190 0070 6C309FE5 		ldr	r3, .L13+12
 191 0074 002093E5 		ldr	r2, [r3]
 192              		.loc 1 89 3
 193 0078 70309FE5 		ldr	r3, .L13+24
 194              		.loc 1 89 19
 195 007c 002083E5 		str	r2, [r3]
  90:./lib/nxt_spi.c ****   *AT91C_SPI_TNCR = 132;
 196              		.loc 1 90 3
 197 0080 6C309FE5 		ldr	r3, .L13+28
 198              		.loc 1 90 19
 199 0084 8420A0E3 		mov	r2, #132
 200 0088 002083E5 		str	r2, [r3]
  91:./lib/nxt_spi.c ****   page = (page + 1) % 8;
 201              		.loc 1 91 16
 202 008c 44309FE5 		ldr	r3, .L13
 203 0090 0030D3E5 		ldrb	r3, [r3]
 204 0094 FF3003E2 		and	r3, r3, #255
 205 0098 013083E2 		add	r3, r3, #1
 206              		.loc 1 91 21
 207 009c 002073E2 		rsbs	r2, r3, #0
 208 00a0 073003E2 		and	r3, r3, #7
 209 00a4 072002E2 		and	r2, r2, #7
 210 00a8 00306252 		rsbpl	r3, r2, #0
 211              		.loc 1 91 8
 212 00ac FF2003E2 		and	r2, r3, #255
 213 00b0 20309FE5 		ldr	r3, .L13
 214 00b4 0020C3E5 		strb	r2, [r3]
  92:./lib/nxt_spi.c ****   data += 100;
 215              		.loc 1 92 8
 216 00b8 24309FE5 		ldr	r3, .L13+12
 217 00bc 003093E5 		ldr	r3, [r3]
 218 00c0 643083E2 		add	r3, r3, #100
 219 00c4 18209FE5 		ldr	r2, .L13+12
 220 00c8 003082E5 		str	r3, [r2]
 221              	.L9:
  93:./lib/nxt_spi.c **** }
 222              		.loc 1 93 1
 223 00cc 04D04BE2 		sub	sp, fp, #4
 224              		.cfi_def_cfa 13, 8
 225              		@ sp needed
 226 00d0 0048BDE8 		pop	{fp, lr}
 227              		.cfi_restore 14
 228              		.cfi_restore 11
 229              		.cfi_def_cfa_offset 0
 230 00d4 1EFF2FE1 		bx	lr
 231              	.L14:
 232              		.align	2
 233              	.L13:
 234 00d8 00000000 		.word	page
 235 00dc 00000000 		.word	dirty
 236 00e0 00000000 		.word	display
 237 00e4 00000000 		.word	data
 238 00e8 1800FEFF 		.word	-131048
 239 00ec 00000000 		.word	spi_set_mode
 240 00f0 1801FEFF 		.word	-130792
 241 00f4 1C01FEFF 		.word	-130788
 242              		.cfi_endproc
 243              	.LFE1:
 245              		.section	.text.nxt_spi_init,"ax",%progbits
 246              		.align	2
 247              		.global	nxt_spi_init
 248              		.syntax unified
 249              		.arm
 251              	nxt_spi_init:
 252              	.LFB2:
  94:./lib/nxt_spi.c **** 
  95:./lib/nxt_spi.c **** 
  96:./lib/nxt_spi.c **** void
  97:./lib/nxt_spi.c **** nxt_spi_init(void)
  98:./lib/nxt_spi.c **** {
 253              		.loc 1 98 1
 254              		.cfi_startproc
 255              		@ Function supports interworking.
 256              		@ args = 0, pretend = 0, frame = 8
 257              		@ frame_needed = 1, uses_anonymous_args = 0
 258 0000 00482DE9 		push	{fp, lr}
 259              		.cfi_def_cfa_offset 8
 260              		.cfi_offset 11, -8
 261              		.cfi_offset 14, -4
 262 0004 04B08DE2 		add	fp, sp, #4
 263              		.cfi_def_cfa 11, 4
 264 0008 08D04DE2 		sub	sp, sp, #8
  99:./lib/nxt_spi.c ****   int i_state = interrupts_get_and_disable();
 265              		.loc 1 99 17
 266 000c 64329FE5 		ldr	r3, .L18
 267 0010 0FE0A0E1 		mov	lr, pc
 268 0014 13FF2FE1 		bx	r3
 269              	.LVL1:
 270 0018 08000BE5 		str	r0, [fp, #-8]
 100:./lib/nxt_spi.c **** #define OSC 48054805
 101:./lib/nxt_spi.c **** #define SPI_BITRATE 2000000
 102:./lib/nxt_spi.c **** 
 103:./lib/nxt_spi.c ****   *AT91C_PMC_PCER  =  (1L << AT91C_ID_SPI);       /* Enable MCK clock     */
 271              		.loc 1 103 3
 272 001c 58329FE5 		ldr	r3, .L18+4
 273              		.loc 1 103 20
 274 0020 2020A0E3 		mov	r2, #32
 275 0024 002083E5 		str	r2, [r3]
 104:./lib/nxt_spi.c ****   
 105:./lib/nxt_spi.c ****   *AT91C_PIOA_PER = AT91C_PIO_PA12;/*EnableA0onPA12*/
 276              		.loc 1 105 3
 277 0028 50329FE5 		ldr	r3, .L18+8
 278              		.loc 1 105 19
 279 002c 012AA0E3 		mov	r2, #4096
 280 0030 002083E5 		str	r2, [r3]
 106:./lib/nxt_spi.c ****   *AT91C_PIOA_OER = AT91C_PIO_PA12;
 281              		.loc 1 106 3
 282 0034 48329FE5 		ldr	r3, .L18+12
 283              		.loc 1 106 19
 284 0038 012AA0E3 		mov	r2, #4096
 285 003c 002083E5 		str	r2, [r3]
 107:./lib/nxt_spi.c ****   *AT91C_PIOA_CODR = AT91C_PIO_PA12;
 286              		.loc 1 107 3
 287 0040 40329FE5 		ldr	r3, .L18+16
 288              		.loc 1 107 20
 289 0044 012AA0E3 		mov	r2, #4096
 290 0048 002083E5 		str	r2, [r3]
 108:./lib/nxt_spi.c ****   *AT91C_PIOA_PDR = AT91C_PA14_SPCK;/*EnableSPCKonPA14*/
 291              		.loc 1 108 3
 292 004c 38329FE5 		ldr	r3, .L18+20
 293              		.loc 1 108 19
 294 0050 0129A0E3 		mov	r2, #16384
 295 0054 002083E5 		str	r2, [r3]
 109:./lib/nxt_spi.c ****   *AT91C_PIOA_ASR = AT91C_PA14_SPCK;
 296              		.loc 1 109 3
 297 0058 30329FE5 		ldr	r3, .L18+24
 298              		.loc 1 109 19
 299 005c 0129A0E3 		mov	r2, #16384
 300 0060 002083E5 		str	r2, [r3]
 110:./lib/nxt_spi.c ****   *AT91C_PIOA_ODR = AT91C_PA14_SPCK;
 301              		.loc 1 110 3
 302 0064 28329FE5 		ldr	r3, .L18+28
 303              		.loc 1 110 19
 304 0068 0129A0E3 		mov	r2, #16384
 305 006c 002083E5 		str	r2, [r3]
 111:./lib/nxt_spi.c ****   *AT91C_PIOA_OWER = AT91C_PA14_SPCK;
 306              		.loc 1 111 3
 307 0070 20329FE5 		ldr	r3, .L18+32
 308              		.loc 1 111 20
 309 0074 0129A0E3 		mov	r2, #16384
 310 0078 002083E5 		str	r2, [r3]
 112:./lib/nxt_spi.c ****   *AT91C_PIOA_MDDR = AT91C_PA14_SPCK;
 311              		.loc 1 112 3
 312 007c 18329FE5 		ldr	r3, .L18+36
 313              		.loc 1 112 20
 314 0080 0129A0E3 		mov	r2, #16384
 315 0084 002083E5 		str	r2, [r3]
 113:./lib/nxt_spi.c ****   *AT91C_PIOA_PPUDR = AT91C_PA14_SPCK;
 316              		.loc 1 113 3
 317 0088 10329FE5 		ldr	r3, .L18+40
 318              		.loc 1 113 21
 319 008c 0129A0E3 		mov	r2, #16384
 320 0090 002083E5 		str	r2, [r3]
 114:./lib/nxt_spi.c ****   *AT91C_PIOA_IFDR = AT91C_PA14_SPCK;
 321              		.loc 1 114 3
 322 0094 08329FE5 		ldr	r3, .L18+44
 323              		.loc 1 114 20
 324 0098 0129A0E3 		mov	r2, #16384
 325 009c 002083E5 		str	r2, [r3]
 115:./lib/nxt_spi.c ****   *AT91C_PIOA_CODR = AT91C_PA14_SPCK;
 326              		.loc 1 115 3
 327 00a0 E0319FE5 		ldr	r3, .L18+16
 328              		.loc 1 115 20
 329 00a4 0129A0E3 		mov	r2, #16384
 330 00a8 002083E5 		str	r2, [r3]
 116:./lib/nxt_spi.c ****   *AT91C_PIOA_IDR = AT91C_PA14_SPCK;
 331              		.loc 1 116 3
 332 00ac F4319FE5 		ldr	r3, .L18+48
 333              		.loc 1 116 19
 334 00b0 0129A0E3 		mov	r2, #16384
 335 00b4 002083E5 		str	r2, [r3]
 117:./lib/nxt_spi.c ****   *AT91C_PIOA_PDR = AT91C_PA13_MOSI;/*EnablemosionPA13*/
 336              		.loc 1 117 3
 337 00b8 CC319FE5 		ldr	r3, .L18+20
 338              		.loc 1 117 19
 339 00bc 022AA0E3 		mov	r2, #8192
 340 00c0 002083E5 		str	r2, [r3]
 118:./lib/nxt_spi.c ****   *AT91C_PIOA_ASR = AT91C_PA13_MOSI;
 341              		.loc 1 118 3
 342 00c4 C4319FE5 		ldr	r3, .L18+24
 343              		.loc 1 118 19
 344 00c8 022AA0E3 		mov	r2, #8192
 345 00cc 002083E5 		str	r2, [r3]
 119:./lib/nxt_spi.c ****   *AT91C_PIOA_ODR = AT91C_PA13_MOSI;
 346              		.loc 1 119 3
 347 00d0 BC319FE5 		ldr	r3, .L18+28
 348              		.loc 1 119 19
 349 00d4 022AA0E3 		mov	r2, #8192
 350 00d8 002083E5 		str	r2, [r3]
 120:./lib/nxt_spi.c ****   *AT91C_PIOA_OWER = AT91C_PA13_MOSI;
 351              		.loc 1 120 3
 352 00dc B4319FE5 		ldr	r3, .L18+32
 353              		.loc 1 120 20
 354 00e0 022AA0E3 		mov	r2, #8192
 355 00e4 002083E5 		str	r2, [r3]
 121:./lib/nxt_spi.c ****   *AT91C_PIOA_MDDR = AT91C_PA13_MOSI;
 356              		.loc 1 121 3
 357 00e8 AC319FE5 		ldr	r3, .L18+36
 358              		.loc 1 121 20
 359 00ec 022AA0E3 		mov	r2, #8192
 360 00f0 002083E5 		str	r2, [r3]
 122:./lib/nxt_spi.c ****   *AT91C_PIOA_PPUDR = AT91C_PA13_MOSI;
 361              		.loc 1 122 3
 362 00f4 A4319FE5 		ldr	r3, .L18+40
 363              		.loc 1 122 21
 364 00f8 022AA0E3 		mov	r2, #8192
 365 00fc 002083E5 		str	r2, [r3]
 123:./lib/nxt_spi.c ****   *AT91C_PIOA_IFDR = AT91C_PA13_MOSI;
 366              		.loc 1 123 3
 367 0100 9C319FE5 		ldr	r3, .L18+44
 368              		.loc 1 123 20
 369 0104 022AA0E3 		mov	r2, #8192
 370 0108 002083E5 		str	r2, [r3]
 124:./lib/nxt_spi.c ****   *AT91C_PIOA_CODR = AT91C_PA13_MOSI;
 371              		.loc 1 124 3
 372 010c 74319FE5 		ldr	r3, .L18+16
 373              		.loc 1 124 20
 374 0110 022AA0E3 		mov	r2, #8192
 375 0114 002083E5 		str	r2, [r3]
 125:./lib/nxt_spi.c ****   *AT91C_PIOA_IDR = AT91C_PA13_MOSI;
 376              		.loc 1 125 3
 377 0118 88319FE5 		ldr	r3, .L18+48
 378              		.loc 1 125 19
 379 011c 022AA0E3 		mov	r2, #8192
 380 0120 002083E5 		str	r2, [r3]
 126:./lib/nxt_spi.c ****   *AT91C_PIOA_PDR = AT91C_PA10_NPCS2;/*Enablenpcs0onPA10*/
 381              		.loc 1 126 3
 382 0124 60319FE5 		ldr	r3, .L18+20
 383              		.loc 1 126 19
 384 0128 012BA0E3 		mov	r2, #1024
 385 012c 002083E5 		str	r2, [r3]
 127:./lib/nxt_spi.c ****   *AT91C_PIOA_BSR = AT91C_PA10_NPCS2;
 386              		.loc 1 127 3
 387 0130 74319FE5 		ldr	r3, .L18+52
 388              		.loc 1 127 19
 389 0134 012BA0E3 		mov	r2, #1024
 390 0138 002083E5 		str	r2, [r3]
 128:./lib/nxt_spi.c ****   *AT91C_PIOA_ODR = AT91C_PA10_NPCS2;
 391              		.loc 1 128 3
 392 013c 50319FE5 		ldr	r3, .L18+28
 393              		.loc 1 128 19
 394 0140 012BA0E3 		mov	r2, #1024
 395 0144 002083E5 		str	r2, [r3]
 129:./lib/nxt_spi.c ****   *AT91C_PIOA_OWER = AT91C_PA10_NPCS2;
 396              		.loc 1 129 3
 397 0148 48319FE5 		ldr	r3, .L18+32
 398              		.loc 1 129 20
 399 014c 012BA0E3 		mov	r2, #1024
 400 0150 002083E5 		str	r2, [r3]
 130:./lib/nxt_spi.c ****   *AT91C_PIOA_MDDR = AT91C_PA10_NPCS2;
 401              		.loc 1 130 3
 402 0154 40319FE5 		ldr	r3, .L18+36
 403              		.loc 1 130 20
 404 0158 012BA0E3 		mov	r2, #1024
 405 015c 002083E5 		str	r2, [r3]
 131:./lib/nxt_spi.c ****   *AT91C_PIOA_PPUDR = AT91C_PA10_NPCS2;
 406              		.loc 1 131 3
 407 0160 38319FE5 		ldr	r3, .L18+40
 408              		.loc 1 131 21
 409 0164 012BA0E3 		mov	r2, #1024
 410 0168 002083E5 		str	r2, [r3]
 132:./lib/nxt_spi.c ****   *AT91C_PIOA_IFDR = AT91C_PA10_NPCS2;
 411              		.loc 1 132 3
 412 016c 30319FE5 		ldr	r3, .L18+44
 413              		.loc 1 132 20
 414 0170 012BA0E3 		mov	r2, #1024
 415 0174 002083E5 		str	r2, [r3]
 133:./lib/nxt_spi.c ****   *AT91C_PIOA_CODR = AT91C_PA10_NPCS2;
 416              		.loc 1 133 3
 417 0178 08319FE5 		ldr	r3, .L18+16
 418              		.loc 1 133 20
 419 017c 012BA0E3 		mov	r2, #1024
 420 0180 002083E5 		str	r2, [r3]
 134:./lib/nxt_spi.c ****   *AT91C_PIOA_IDR = AT91C_PA10_NPCS2;
 421              		.loc 1 134 3
 422 0184 1C319FE5 		ldr	r3, .L18+48
 423              		.loc 1 134 19
 424 0188 012BA0E3 		mov	r2, #1024
 425 018c 002083E5 		str	r2, [r3]
 135:./lib/nxt_spi.c ****   
 136:./lib/nxt_spi.c ****   *AT91C_SPI_CR = AT91C_SPI_SWRST;/*Softreset*/
 426              		.loc 1 136 3
 427 0190 18319FE5 		ldr	r3, .L18+56
 428              		.loc 1 136 17
 429 0194 8020A0E3 		mov	r2, #128
 430 0198 002083E5 		str	r2, [r3]
 137:./lib/nxt_spi.c ****   *AT91C_SPI_CR = AT91C_SPI_SPIEN;/*Enablespi*/
 431              		.loc 1 137 3
 432 019c 0C319FE5 		ldr	r3, .L18+56
 433              		.loc 1 137 17
 434 01a0 0120A0E3 		mov	r2, #1
 435 01a4 002083E5 		str	r2, [r3]
 138:./lib/nxt_spi.c ****   *AT91C_SPI_MR = AT91C_SPI_MSTR|AT91C_SPI_MODFDIS | (0xB<<16);
 436              		.loc 1 138 3
 437 01a8 04319FE5 		ldr	r3, .L18+60
 438              		.loc 1 138 17
 439 01ac 04219FE5 		ldr	r2, .L18+64
 440 01b0 002083E5 		str	r2, [r3]
 139:./lib/nxt_spi.c ****   AT91C_SPI_CSR[2] = ((OSC/SPI_BITRATE)<<8) | AT91C_SPI_CPOL;
 441              		.loc 1 139 16
 442 01b4 00319FE5 		ldr	r3, .L18+68
 443              		.loc 1 139 20
 444 01b8 00219FE5 		ldr	r2, .L18+72
 445 01bc 002083E5 		str	r2, [r3]
 140:./lib/nxt_spi.c **** 
 141:./lib/nxt_spi.c ****   /* Set mode to unknown */
 142:./lib/nxt_spi.c ****   mode = 0xff;
 446              		.loc 1 142 8
 447 01c0 FC309FE5 		ldr	r3, .L18+76
 448 01c4 0020E0E3 		mvn	r2, #0
 449 01c8 0020C3E5 		strb	r2, [r3]
 143:./lib/nxt_spi.c **** 
 144:./lib/nxt_spi.c ****   /* Set up safe dma refresh state */
 145:./lib/nxt_spi.c ****   data = display = (uint8_t *) 0;
 450              		.loc 1 145 18
 451 01cc F4309FE5 		ldr	r3, .L18+80
 452 01d0 0020A0E3 		mov	r2, #0
 453 01d4 002083E5 		str	r2, [r3]
 454              		.loc 1 145 8
 455 01d8 EC309FE5 		ldr	r3, .L18+84
 456 01dc 0020A0E3 		mov	r2, #0
 457 01e0 002083E5 		str	r2, [r3]
 146:./lib/nxt_spi.c ****   dirty = 0;
 458              		.loc 1 146 9
 459 01e4 E4309FE5 		ldr	r3, .L18+88
 460 01e8 0020A0E3 		mov	r2, #0
 461 01ec 0020C3E5 		strb	r2, [r3]
 147:./lib/nxt_spi.c ****   page = 0;
 462              		.loc 1 147 8
 463 01f0 DC309FE5 		ldr	r3, .L18+92
 464 01f4 0020A0E3 		mov	r2, #0
 465 01f8 0020C3E5 		strb	r2, [r3]
 148:./lib/nxt_spi.c **** 
 149:./lib/nxt_spi.c ****   /* Install the interrupt handler */
 150:./lib/nxt_spi.c ****   aic_mask_off  (AT91C_ID_SPI);
 466              		.loc 1 150 3
 467 01fc 0500A0E3 		mov	r0, #5
 468 0200 D0309FE5 		ldr	r3, .L18+96
 469 0204 0FE0A0E1 		mov	lr, pc
 470 0208 13FF2FE1 		bx	r3
 471              	.LVL2:
 151:./lib/nxt_spi.c ****   aic_set_vector(AT91C_ID_SPI, AT91C_AIC_SRCTYPE_POSITIVE_EDGE | AIC_INT_LEVEL_NORMAL,spi_isr_C);
 472              		.loc 1 151 3
 473 020c C8209FE5 		ldr	r2, .L18+100
 474 0210 6410A0E3 		mov	r1, #100
 475 0214 0500A0E3 		mov	r0, #5
 476 0218 C0309FE5 		ldr	r3, .L18+104
 477 021c 0FE0A0E1 		mov	lr, pc
 478 0220 13FF2FE1 		bx	r3
 479              	.LVL3:
 152:./lib/nxt_spi.c ****   aic_clear     (AT91C_ID_SPI);
 480              		.loc 1 152 3
 481 0224 0500A0E3 		mov	r0, #5
 482 0228 B4309FE5 		ldr	r3, .L18+108
 483 022c 0FE0A0E1 		mov	lr, pc
 484 0230 13FF2FE1 		bx	r3
 485              	.LVL4:
 153:./lib/nxt_spi.c ****   aic_mask_on   (AT91C_ID_SPI);
 486              		.loc 1 153 3
 487 0234 0500A0E3 		mov	r0, #5
 488 0238 A8309FE5 		ldr	r3, .L18+112
 489 023c 0FE0A0E1 		mov	lr, pc
 490 0240 13FF2FE1 		bx	r3
 491              	.LVL5:
 154:./lib/nxt_spi.c ****   *AT91C_SPI_PTCR = AT91C_PDC_TXTEN;
 492              		.loc 1 154 3
 493 0244 A0309FE5 		ldr	r3, .L18+116
 494              		.loc 1 154 19
 495 0248 012CA0E3 		mov	r2, #256
 496 024c 002083E5 		str	r2, [r3]
 155:./lib/nxt_spi.c **** 
 156:./lib/nxt_spi.c ****   if (i_state)
 497              		.loc 1 156 6
 498 0250 08301BE5 		ldr	r3, [fp, #-8]
 499 0254 000053E3 		cmp	r3, #0
 500 0258 0200000A 		beq	.L17
 157:./lib/nxt_spi.c ****     interrupts_enable();
 501              		.loc 1 157 5
 502 025c 8C309FE5 		ldr	r3, .L18+120
 503 0260 0FE0A0E1 		mov	lr, pc
 504 0264 13FF2FE1 		bx	r3
 505              	.LVL6:
 506              	.L17:
 158:./lib/nxt_spi.c ****   
 159:./lib/nxt_spi.c **** }
 507              		.loc 1 159 1
 508 0268 0000A0E1 		nop
 509 026c 04D04BE2 		sub	sp, fp, #4
 510              		.cfi_def_cfa 13, 8
 511              		@ sp needed
 512 0270 0048BDE8 		pop	{fp, lr}
 513              		.cfi_restore 14
 514              		.cfi_restore 11
 515              		.cfi_def_cfa_offset 0
 516 0274 1EFF2FE1 		bx	lr
 517              	.L19:
 518              		.align	2
 519              	.L18:
 520 0278 00000000 		.word	interrupts_get_and_disable
 521 027c 10FCFFFF 		.word	-1008
 522 0280 00F4FFFF 		.word	-3072
 523 0284 10F4FFFF 		.word	-3056
 524 0288 34F4FFFF 		.word	-3020
 525 028c 04F4FFFF 		.word	-3068
 526 0290 70F4FFFF 		.word	-2960
 527 0294 14F4FFFF 		.word	-3052
 528 0298 A0F4FFFF 		.word	-2912
 529 029c 54F4FFFF 		.word	-2988
 530 02a0 60F4FFFF 		.word	-2976
 531 02a4 24F4FFFF 		.word	-3036
 532 02a8 44F4FFFF 		.word	-3004
 533 02ac 74F4FFFF 		.word	-2956
 534 02b0 0000FEFF 		.word	-131072
 535 02b4 0400FEFF 		.word	-131068
 536 02b8 11000B00 		.word	720913
 537 02bc 3800FEFF 		.word	-131016
 538 02c0 01180000 		.word	6145
 539 02c4 00000000 		.word	mode
 540 02c8 00000000 		.word	display
 541 02cc 00000000 		.word	data
 542 02d0 00000000 		.word	dirty
 543 02d4 00000000 		.word	page
 544 02d8 00000000 		.word	aic_mask_off
 545 02dc 00000000 		.word	spi_isr_C
 546 02e0 00000000 		.word	aic_set_vector
 547 02e4 00000000 		.word	aic_clear
 548 02e8 00000000 		.word	aic_mask_on
 549 02ec 2001FEFF 		.word	-130784
 550 02f0 00000000 		.word	interrupts_enable
 551              		.cfi_endproc
 552              	.LFE2:
 554              		.section	.text.nxt_spi_write,"ax",%progbits
 555              		.align	2
 556              		.global	nxt_spi_write
 557              		.syntax unified
 558              		.arm
 560              	nxt_spi_write:
 561              	.LFB3:
 160:./lib/nxt_spi.c **** 
 161:./lib/nxt_spi.c **** void
 162:./lib/nxt_spi.c **** nxt_spi_write(uint32_t CD, const uint8_t *data, uint32_t nBytes)
 163:./lib/nxt_spi.c **** {
 562              		.loc 1 163 1
 563              		.cfi_startproc
 564              		@ Function supports interworking.
 565              		@ args = 0, pretend = 0, frame = 24
 566              		@ frame_needed = 1, uses_anonymous_args = 0
 567 0000 00482DE9 		push	{fp, lr}
 568              		.cfi_def_cfa_offset 8
 569              		.cfi_offset 11, -8
 570              		.cfi_offset 14, -4
 571 0004 04B08DE2 		add	fp, sp, #4
 572              		.cfi_def_cfa 11, 4
 573 0008 18D04DE2 		sub	sp, sp, #24
 574 000c 10000BE5 		str	r0, [fp, #-16]
 575 0010 14100BE5 		str	r1, [fp, #-20]
 576 0014 18200BE5 		str	r2, [fp, #-24]
 164:./lib/nxt_spi.c ****   uint32_t status;
 165:./lib/nxt_spi.c ****   uint32_t cd_mask = (CD ? 0x100 : 0);
 577              		.loc 1 165 34
 578 0018 10301BE5 		ldr	r3, [fp, #-16]
 579 001c 000053E3 		cmp	r3, #0
 580 0020 0100000A 		beq	.L21
 581              		.loc 1 165 34 is_stmt 0 discriminator 1
 582 0024 013CA0E3 		mov	r3, #256
 583 0028 000000EA 		b	.L22
 584              	.L21:
 585              		.loc 1 165 34 discriminator 2
 586 002c 0030A0E3 		mov	r3, #0
 587              	.L22:
 588              		.loc 1 165 12 is_stmt 1 discriminator 4
 589 0030 08300BE5 		str	r3, [fp, #-8]
 166:./lib/nxt_spi.c **** 
 167:./lib/nxt_spi.c ****   spi_set_mode(CD);
 590              		.loc 1 167 3
 591 0034 10301BE5 		ldr	r3, [fp, #-16]
 592 0038 FF3003E2 		and	r3, r3, #255
 593 003c 0300A0E1 		mov	r0, r3
 594 0040 78309FE5 		ldr	r3, .L26
 595 0044 0FE0A0E1 		mov	lr, pc
 596 0048 13FF2FE1 		bx	r3
 597              	.LVL7:
 168:./lib/nxt_spi.c ****   while (nBytes) {
 598              		.loc 1 168 9
 599 004c 130000EA 		b	.L23
 600              	.L25:
 169:./lib/nxt_spi.c ****     *AT91C_SPI_TDR = (*data | cd_mask);
 601              		.loc 1 169 23
 602 0050 14301BE5 		ldr	r3, [fp, #-20]
 603 0054 0030D3E5 		ldrb	r3, [r3]	@ zero_extendqisi2
 604 0058 0310A0E1 		mov	r1, r3
 605              		.loc 1 169 5
 606 005c 60209FE5 		ldr	r2, .L26+4
 607              		.loc 1 169 29
 608 0060 08301BE5 		ldr	r3, [fp, #-8]
 609 0064 033081E1 		orr	r3, r1, r3
 610              		.loc 1 169 20
 611 0068 003082E5 		str	r3, [r2]
 170:./lib/nxt_spi.c ****     data++;
 612              		.loc 1 170 9
 613 006c 14301BE5 		ldr	r3, [fp, #-20]
 614 0070 013083E2 		add	r3, r3, #1
 615 0074 14300BE5 		str	r3, [fp, #-20]
 171:./lib/nxt_spi.c ****     nBytes--;
 616              		.loc 1 171 11
 617 0078 18301BE5 		ldr	r3, [fp, #-24]
 618 007c 013043E2 		sub	r3, r3, #1
 619 0080 18300BE5 		str	r3, [fp, #-24]
 620              	.L24:
 172:./lib/nxt_spi.c ****     /* Wait until byte sent */
 173:./lib/nxt_spi.c ****     do {
 174:./lib/nxt_spi.c ****       status = *AT91C_SPI_SR;
 621              		.loc 1 174 16
 622 0084 3C309FE5 		ldr	r3, .L26+8
 623              		.loc 1 174 14
 624 0088 003093E5 		ldr	r3, [r3]
 625 008c 0C300BE5 		str	r3, [fp, #-12]
 175:./lib/nxt_spi.c ****     } while (!(status & 0x200));
 626              		.loc 1 175 23 discriminator 1
 627 0090 0C301BE5 		ldr	r3, [fp, #-12]
 628 0094 023C03E2 		and	r3, r3, #512
 629              		.loc 1 175 14 discriminator 1
 630 0098 000053E3 		cmp	r3, #0
 631 009c F8FFFF0A 		beq	.L24
 632              	.L23:
 168:./lib/nxt_spi.c ****     *AT91C_SPI_TDR = (*data | cd_mask);
 633              		.loc 1 168 10
 634 00a0 18301BE5 		ldr	r3, [fp, #-24]
 635 00a4 000053E3 		cmp	r3, #0
 636 00a8 E8FFFF1A 		bne	.L25
 176:./lib/nxt_spi.c **** 
 177:./lib/nxt_spi.c ****   }
 178:./lib/nxt_spi.c **** }
 637              		.loc 1 178 1
 638 00ac 0000A0E1 		nop
 639 00b0 0000A0E1 		nop
 640 00b4 04D04BE2 		sub	sp, fp, #4
 641              		.cfi_def_cfa 13, 8
 642              		@ sp needed
 643 00b8 0048BDE8 		pop	{fp, lr}
 644              		.cfi_restore 14
 645              		.cfi_restore 11
 646              		.cfi_def_cfa_offset 0
 647 00bc 1EFF2FE1 		bx	lr
 648              	.L27:
 649              		.align	2
 650              	.L26:
 651 00c0 00000000 		.word	spi_set_mode
 652 00c4 0C00FEFF 		.word	-131060
 653 00c8 1000FEFF 		.word	-131056
 654              		.cfi_endproc
 655              	.LFE3:
 657              		.section	.text.nxt_spi_set_display,"ax",%progbits
 658              		.align	2
 659              		.global	nxt_spi_set_display
 660              		.syntax unified
 661              		.arm
 663              	nxt_spi_set_display:
 664              	.LFB4:
 179:./lib/nxt_spi.c **** 
 180:./lib/nxt_spi.c **** void
 181:./lib/nxt_spi.c **** nxt_spi_set_display(const uint8_t *disp)
 182:./lib/nxt_spi.c **** {
 665              		.loc 1 182 1
 666              		.cfi_startproc
 667              		@ Function supports interworking.
 668              		@ args = 0, pretend = 0, frame = 8
 669              		@ frame_needed = 1, uses_anonymous_args = 0
 670              		@ link register save eliminated.
 671 0000 04B02DE5 		str	fp, [sp, #-4]!
 672              		.cfi_def_cfa_offset 4
 673              		.cfi_offset 11, -4
 674 0004 00B08DE2 		add	fp, sp, #0
 675              		.cfi_def_cfa_register 11
 676 0008 0CD04DE2 		sub	sp, sp, #12
 677 000c 08000BE5 		str	r0, [fp, #-8]
 183:./lib/nxt_spi.c ****   /* Set the display buffer to be used for dma refresh.
 184:./lib/nxt_spi.c ****    * it is really only safe to set the display once. Should probably
 185:./lib/nxt_spi.c ****    * sort this out so that it is set separately from requesting a refresh
 186:./lib/nxt_spi.c ****    */
 187:./lib/nxt_spi.c ****   if (!display) display = disp;
 678              		.loc 1 187 7
 679 0010 24309FE5 		ldr	r3, .L31
 680 0014 003093E5 		ldr	r3, [r3]
 681              		.loc 1 187 6
 682 0018 000053E3 		cmp	r3, #0
 683 001c 0200001A 		bne	.L30
 684              		.loc 1 187 25 discriminator 1
 685 0020 14209FE5 		ldr	r2, .L31
 686 0024 08301BE5 		ldr	r3, [fp, #-8]
 687 0028 003082E5 		str	r3, [r2]
 688              	.L30:
 188:./lib/nxt_spi.c **** }
 689              		.loc 1 188 1
 690 002c 0000A0E1 		nop
 691 0030 00D08BE2 		add	sp, fp, #0
 692              		.cfi_def_cfa_register 13
 693              		@ sp needed
 694 0034 04B09DE4 		ldr	fp, [sp], #4
 695              		.cfi_restore 11
 696              		.cfi_def_cfa_offset 0
 697 0038 1EFF2FE1 		bx	lr
 698              	.L32:
 699              		.align	2
 700              	.L31:
 701 003c 00000000 		.word	display
 702              		.cfi_endproc
 703              	.LFE4:
 705              		.section	.text.nxt_spi_refresh,"ax",%progbits
 706              		.align	2
 707              		.global	nxt_spi_refresh
 708              		.syntax unified
 709              		.arm
 711              	nxt_spi_refresh:
 712              	.LFB5:
 189:./lib/nxt_spi.c **** 
 190:./lib/nxt_spi.c **** void
 191:./lib/nxt_spi.c **** nxt_spi_refresh(void)
 192:./lib/nxt_spi.c **** {
 713              		.loc 1 192 1
 714              		.cfi_startproc
 715              		@ Function supports interworking.
 716              		@ args = 0, pretend = 0, frame = 0
 717              		@ frame_needed = 1, uses_anonymous_args = 0
 718              		@ link register save eliminated.
 719 0000 04B02DE5 		str	fp, [sp, #-4]!
 720              		.cfi_def_cfa_offset 4
 721              		.cfi_offset 11, -4
 722 0004 00B08DE2 		add	fp, sp, #0
 723              		.cfi_def_cfa_register 11
 193:./lib/nxt_spi.c ****   /* Request the start of a dma refresh of the display 
 194:./lib/nxt_spi.c ****    */
 195:./lib/nxt_spi.c ****   // If the display is not set nothing to do.
 196:./lib/nxt_spi.c ****   if (!display) 
 724              		.loc 1 196 7
 725 0008 48309FE5 		ldr	r3, .L37
 726 000c 003093E5 		ldr	r3, [r3]
 727              		.loc 1 196 6
 728 0010 000053E3 		cmp	r3, #0
 729 0014 0B00000A 		beq	.L36
 197:./lib/nxt_spi.c **** 	  return;
 198:./lib/nxt_spi.c ****   // Say we have changes
 199:./lib/nxt_spi.c ****   dirty = 1;
 730              		.loc 1 199 9
 731 0018 3C309FE5 		ldr	r3, .L37+4
 732 001c 0120A0E3 		mov	r2, #1
 733 0020 0020C3E5 		strb	r2, [r3]
 200:./lib/nxt_spi.c ****   // Start the DMA refresh
 201:./lib/nxt_spi.c ****   if(((*AT91C_SPI_SR) & AT91C_SPI_ENDTX))
 734              		.loc 1 201 8
 735 0024 34309FE5 		ldr	r3, .L37+8
 736 0028 003093E5 		ldr	r3, [r3]
 737              		.loc 1 201 23
 738 002c 203003E2 		and	r3, r3, #32
 739              		.loc 1 201 5
 740 0030 000053E3 		cmp	r3, #0
 741 0034 0400000A 		beq	.L33
 202:./lib/nxt_spi.c **** 	*AT91C_SPI_IER = AT91C_SPI_ENDTX;
 742              		.loc 1 202 2
 743 0038 24309FE5 		ldr	r3, .L37+12
 744              		.loc 1 202 17
 745 003c 2020A0E3 		mov	r2, #32
 746 0040 002083E5 		str	r2, [r3]
 747 0044 000000EA 		b	.L33
 748              	.L36:
 197:./lib/nxt_spi.c **** 	  return;
 749              		.loc 1 197 4
 750 0048 0000A0E1 		nop
 751              	.L33:
 203:./lib/nxt_spi.c **** 
 204:./lib/nxt_spi.c **** }
 752              		.loc 1 204 1
 753 004c 00D08BE2 		add	sp, fp, #0
 754              		.cfi_def_cfa_register 13
 755              		@ sp needed
 756 0050 04B09DE4 		ldr	fp, [sp], #4
 757              		.cfi_restore 11
 758              		.cfi_def_cfa_offset 0
 759 0054 1EFF2FE1 		bx	lr
 760              	.L38:
 761              		.align	2
 762              	.L37:
 763 0058 00000000 		.word	display
 764 005c 00000000 		.word	dirty
 765 0060 1000FEFF 		.word	-131056
 766 0064 1400FEFF 		.word	-131052
 767              		.cfi_endproc
 768              	.LFE5:
 770              		.text
 771              	.Letext0:
 772              		.file 2 "/usr/lib/gcc/arm-gnu-toolchain-14.3.rel1-x86_64-arm-none-eabi/arm-none-eabi/include/machi
 773              		.file 3 "/usr/lib/gcc/arm-gnu-toolchain-14.3.rel1-x86_64-arm-none-eabi/arm-none-eabi/include/sys/_
 774              		.file 4 "./lib/../AT91SAM7S64.h"
 775              		.file 5 "./lib/aic.h"
 776              		.file 6 "./lib/isr.h"
DEFINED SYMBOLS
                            *ABS*:00000000 nxt_spi.c
     /tmp/ccP7Hh5m.s:23     .bss:00000000 display
     /tmp/ccP7Hh5m.s:20     .bss:00000000 $d
     /tmp/ccP7Hh5m.s:28     .bss:00000004 dirty
     /tmp/ccP7Hh5m.s:33     .bss:00000005 page
     /tmp/ccP7Hh5m.s:39     .bss:00000008 data
     /tmp/ccP7Hh5m.s:45     .data:00000000 mode
     /tmp/ccP7Hh5m.s:48     .text.spi_set_mode:00000000 $a
     /tmp/ccP7Hh5m.s:52     .text.spi_set_mode:00000000 spi_set_mode
     /tmp/ccP7Hh5m.s:124    .text.spi_set_mode:0000008c $d
     /tmp/ccP7Hh5m.s:132    .text.spi_isr_C:00000000 $a
     /tmp/ccP7Hh5m.s:137    .text.spi_isr_C:00000000 spi_isr_C
     /tmp/ccP7Hh5m.s:234    .text.spi_isr_C:000000d8 $d
     /tmp/ccP7Hh5m.s:246    .text.nxt_spi_init:00000000 $a
     /tmp/ccP7Hh5m.s:251    .text.nxt_spi_init:00000000 nxt_spi_init
     /tmp/ccP7Hh5m.s:520    .text.nxt_spi_init:00000278 $d
     /tmp/ccP7Hh5m.s:555    .text.nxt_spi_write:00000000 $a
     /tmp/ccP7Hh5m.s:560    .text.nxt_spi_write:00000000 nxt_spi_write
     /tmp/ccP7Hh5m.s:651    .text.nxt_spi_write:000000c0 $d
     /tmp/ccP7Hh5m.s:658    .text.nxt_spi_set_display:00000000 $a
     /tmp/ccP7Hh5m.s:663    .text.nxt_spi_set_display:00000000 nxt_spi_set_display
     /tmp/ccP7Hh5m.s:701    .text.nxt_spi_set_display:0000003c $d
     /tmp/ccP7Hh5m.s:706    .text.nxt_spi_refresh:00000000 $a
     /tmp/ccP7Hh5m.s:711    .text.nxt_spi_refresh:00000000 nxt_spi_refresh
     /tmp/ccP7Hh5m.s:763    .text.nxt_spi_refresh:00000058 $d

UNDEFINED SYMBOLS
interrupts_get_and_disable
aic_mask_off
aic_set_vector
aic_clear
aic_mask_on
interrupts_enable
