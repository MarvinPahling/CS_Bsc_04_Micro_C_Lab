   1              		.cpu arm7tdmi
   2              		.arch armv4t
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 0
  12              		.eabi_attribute 18, 4
  13              		.file	"helper.ct"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.file 1 "./lib/helper.ct"
  18              		.section	.text.unsigned2string,"ax",%progbits
  19              		.align	1
  20              		.global	unsigned2string
  21              		.syntax unified
  22              		.code	16
  23              		.thumb_func
  25              	unsigned2string:
  26              	.LFB0:
   1:./lib/helper.ct **** #include "helper.h"
   2:./lib/helper.ct **** 
   3:./lib/helper.ct **** //buf    -> Buffer mit mindestens 12 Zeichen Platz
   4:./lib/helper.ct **** //val    -> zu konvertierender Wert
   5:./lib/helper.ct **** //places -> Mindestbreite (Ausgabe ist rechtsbündig)
   6:./lib/helper.ct **** //sign   -> Vorzeichen 1->'-'
   7:./lib/helper.ct **** //return -> Zeiger auf 1. Zeichen des konvertierten Strings
   8:./lib/helper.ct **** char *unsigned2string(char buf[12], unsigned int val, unsigned int places, unsigned int sign)
   9:./lib/helper.ct **** {
  27              		.loc 1 9 1
  28              		.cfi_startproc
  29              		@ Function supports interworking.
  30              		@ args = 0, pretend = 0, frame = 24
  31              		@ frame_needed = 1, uses_anonymous_args = 0
  32 0000 80B5     		push	{r7, lr}
  33              		.cfi_def_cfa_offset 8
  34              		.cfi_offset 7, -8
  35              		.cfi_offset 14, -4
  36 0002 86B0     		sub	sp, sp, #24
  37              		.cfi_def_cfa_offset 32
  38 0004 00AF     		add	r7, sp, #0
  39              		.cfi_def_cfa_register 7
  40 0006 F860     		str	r0, [r7, #12]
  41 0008 B960     		str	r1, [r7, #8]
  42 000a 7A60     		str	r2, [r7, #4]
  43 000c 3B60     		str	r3, [r7]
  10:./lib/helper.ct ****   char *p = &buf[11];
  44              		.loc 1 10 9
  45 000e FB68     		ldr	r3, [r7, #12]
  46 0010 0B33     		adds	r3, r3, #11
  47 0012 7B61     		str	r3, [r7, #20]
  11:./lib/helper.ct ****   unsigned int   p_count = 0;
  48              		.loc 1 11 18
  49 0014 0023     		movs	r3, #0
  50 0016 3B61     		str	r3, [r7, #16]
  12:./lib/helper.ct **** 
  13:./lib/helper.ct ****   *p = 0;
  51              		.loc 1 13 6
  52 0018 7B69     		ldr	r3, [r7, #20]
  53 001a 0022     		movs	r2, #0
  54 001c 1A70     		strb	r2, [r3]
  14:./lib/helper.ct **** 
  15:./lib/helper.ct ****   if (places > 11)
  55              		.loc 1 15 6
  56 001e 7B68     		ldr	r3, [r7, #4]
  57 0020 0B2B     		cmp	r3, #11
  58 0022 1ED9     		bls	.L3
  16:./lib/helper.ct ****     places = 11;
  59              		.loc 1 16 12
  60 0024 0B23     		movs	r3, #11
  61 0026 7B60     		str	r3, [r7, #4]
  17:./lib/helper.ct **** 
  18:./lib/helper.ct ****   while (val) {
  62              		.loc 1 18 9
  63 0028 1BE0     		b	.L3
  64              	.L4:
  19:./lib/helper.ct ****     p--;
  65              		.loc 1 19 6
  66 002a 7B69     		ldr	r3, [r7, #20]
  67 002c 013B     		subs	r3, r3, #1
  68 002e 7B61     		str	r3, [r7, #20]
  20:./lib/helper.ct ****     p_count++;
  69              		.loc 1 20 12
  70 0030 3B69     		ldr	r3, [r7, #16]
  71 0032 0133     		adds	r3, r3, #1
  72 0034 3B61     		str	r3, [r7, #16]
  21:./lib/helper.ct ****     *p = (val % 10) + '0';
  73              		.loc 1 21 15
  74 0036 BA68     		ldr	r2, [r7, #8]
  75 0038 224B     		ldr	r3, .L10
  76 003a 0A21     		movs	r1, #10
  77 003c 1000     		movs	r0, r2
  78 003e 00F045F8 		bl	.L12
  79              	.LVL0:
  80 0042 0B00     		movs	r3, r1
  81              		.loc 1 21 21
  82 0044 1B06     		lsls	r3, r3, #24
  83 0046 1B0E     		lsrs	r3, r3, #24
  84 0048 3033     		adds	r3, r3, #48
  85 004a 1B06     		lsls	r3, r3, #24
  86 004c 1A0E     		lsrs	r2, r3, #24
  87              		.loc 1 21 8
  88 004e 7B69     		ldr	r3, [r7, #20]
  89 0050 1A70     		strb	r2, [r3]
  22:./lib/helper.ct ****     val /= 10;
  90              		.loc 1 22 9
  91 0052 BA68     		ldr	r2, [r7, #8]
  92 0054 1C4B     		ldr	r3, .L10+4
  93 0056 0A21     		movs	r1, #10
  94 0058 1000     		movs	r0, r2
  95 005a 00F037F8 		bl	.L12
  96              	.LVL1:
  97 005e 0300     		movs	r3, r0
  98 0060 BB60     		str	r3, [r7, #8]
  99              	.L3:
  18:./lib/helper.ct ****     p--;
 100              		.loc 1 18 10
 101 0062 BB68     		ldr	r3, [r7, #8]
 102 0064 002B     		cmp	r3, #0
 103 0066 E0D1     		bne	.L4
  23:./lib/helper.ct ****   }
  24:./lib/helper.ct **** 
  25:./lib/helper.ct ****   if (!p_count) {
 104              		.loc 1 25 6
 105 0068 3B69     		ldr	r3, [r7, #16]
 106 006a 002B     		cmp	r3, #0
 107 006c 08D1     		bne	.L5
  26:./lib/helper.ct ****     p--;
 108              		.loc 1 26 6
 109 006e 7B69     		ldr	r3, [r7, #20]
 110 0070 013B     		subs	r3, r3, #1
 111 0072 7B61     		str	r3, [r7, #20]
  27:./lib/helper.ct ****     p_count++;
 112              		.loc 1 27 12
 113 0074 3B69     		ldr	r3, [r7, #16]
 114 0076 0133     		adds	r3, r3, #1
 115 0078 3B61     		str	r3, [r7, #16]
  28:./lib/helper.ct ****     *p = '0';
 116              		.loc 1 28 8
 117 007a 7B69     		ldr	r3, [r7, #20]
 118 007c 3022     		movs	r2, #48
 119 007e 1A70     		strb	r2, [r3]
 120              	.L5:
  29:./lib/helper.ct ****   }
  30:./lib/helper.ct **** 
  31:./lib/helper.ct ****   if (sign) {
 121              		.loc 1 31 6
 122 0080 3B68     		ldr	r3, [r7]
 123 0082 002B     		cmp	r3, #0
 124 0084 12D0     		beq	.L7
  32:./lib/helper.ct ****     p--;
 125              		.loc 1 32 6
 126 0086 7B69     		ldr	r3, [r7, #20]
 127 0088 013B     		subs	r3, r3, #1
 128 008a 7B61     		str	r3, [r7, #20]
  33:./lib/helper.ct ****     p_count++;
 129              		.loc 1 33 12
 130 008c 3B69     		ldr	r3, [r7, #16]
 131 008e 0133     		adds	r3, r3, #1
 132 0090 3B61     		str	r3, [r7, #16]
  34:./lib/helper.ct ****     *p = '-';
 133              		.loc 1 34 8
 134 0092 7B69     		ldr	r3, [r7, #20]
 135 0094 2D22     		movs	r2, #45
 136 0096 1A70     		strb	r2, [r3]
  35:./lib/helper.ct ****   }
  36:./lib/helper.ct **** 
  37:./lib/helper.ct ****   while (p_count < places) {
 137              		.loc 1 37 9
 138 0098 08E0     		b	.L7
 139              	.L8:
  38:./lib/helper.ct ****     p--;
 140              		.loc 1 38 6
 141 009a 7B69     		ldr	r3, [r7, #20]
 142 009c 013B     		subs	r3, r3, #1
 143 009e 7B61     		str	r3, [r7, #20]
  39:./lib/helper.ct ****     p_count++;
 144              		.loc 1 39 12
 145 00a0 3B69     		ldr	r3, [r7, #16]
 146 00a2 0133     		adds	r3, r3, #1
 147 00a4 3B61     		str	r3, [r7, #16]
  40:./lib/helper.ct ****     *p = ' ';
 148              		.loc 1 40 8
 149 00a6 7B69     		ldr	r3, [r7, #20]
 150 00a8 2022     		movs	r2, #32
 151 00aa 1A70     		strb	r2, [r3]
 152              	.L7:
  37:./lib/helper.ct ****     p--;
 153              		.loc 1 37 18
 154 00ac 3A69     		ldr	r2, [r7, #16]
 155 00ae 7B68     		ldr	r3, [r7, #4]
 156 00b0 9A42     		cmp	r2, r3
 157 00b2 F2D3     		bcc	.L8
  41:./lib/helper.ct ****   }
  42:./lib/helper.ct ****   return p;
 158              		.loc 1 42 10
 159 00b4 7B69     		ldr	r3, [r7, #20]
  43:./lib/helper.ct **** }
 160              		.loc 1 43 1
 161 00b6 1800     		movs	r0, r3
 162 00b8 BD46     		mov	sp, r7
 163 00ba 06B0     		add	sp, sp, #24
 164              		@ sp needed
 165 00bc 80BC     		pop	{r7}
 166 00be 02BC     		pop	{r1}
 167 00c0 0847     		bx	r1
 168              	.L11:
 169 00c2 C046     		.align	2
 170              	.L10:
 171 00c4 00000000 		.word	__aeabi_uidivmod
 172 00c8 00000000 		.word	__aeabi_uidiv
 173              	.L12:
 174 00cc 1847     		bx	r3
 175              		.cfi_endproc
 176              	.LFE0:
 178 00ce C046     		.section	.rodata
 179              		.align	2
 180              	.LC2:
 181 0000 30313233 		.ascii	"0123456789ABCDEF\000"
 181      34353637 
 181      38394142 
 181      43444546 
 181      00
 182              		.section	.text.hex2string,"ax",%progbits
 183              		.align	1
 184              		.global	hex2string
 185              		.syntax unified
 186              		.code	16
 187              		.thumb_func
 189              	hex2string:
 190              	.LFB1:
  44:./lib/helper.ct **** 
  45:./lib/helper.ct **** //buf    -> Buffer mit mindestens 9 Zeichen Platz
  46:./lib/helper.ct **** //val    -> zu konvertierender Wert
  47:./lib/helper.ct **** //places -> Mindestbreite (mit '0' auffüllen, wenn Zahl 'kleiner' ist)
  48:./lib/helper.ct **** //return -> Zeiger auf 1. Zeichen des konvertierten Strings
  49:./lib/helper.ct **** char *hex2string(char buf[9],unsigned int val, unsigned int places)
  50:./lib/helper.ct **** {
 191              		.loc 1 50 1
 192              		.cfi_startproc
 193              		@ Function supports interworking.
 194              		@ args = 0, pretend = 0, frame = 24
 195              		@ frame_needed = 1, uses_anonymous_args = 0
 196 0000 80B5     		push	{r7, lr}
 197              		.cfi_def_cfa_offset 8
 198              		.cfi_offset 7, -8
 199              		.cfi_offset 14, -4
 200 0002 86B0     		sub	sp, sp, #24
 201              		.cfi_def_cfa_offset 32
 202 0004 00AF     		add	r7, sp, #0
 203              		.cfi_def_cfa_register 7
 204 0006 F860     		str	r0, [r7, #12]
 205 0008 B960     		str	r1, [r7, #8]
 206 000a 7A60     		str	r2, [r7, #4]
  51:./lib/helper.ct ****   char *p = &buf[8];
 207              		.loc 1 51 9
 208 000c FB68     		ldr	r3, [r7, #12]
 209 000e 0833     		adds	r3, r3, #8
 210 0010 7B61     		str	r3, [r7, #20]
  52:./lib/helper.ct ****   unsigned int p_count = 0;
 211              		.loc 1 52 16
 212 0012 0023     		movs	r3, #0
 213 0014 3B61     		str	r3, [r7, #16]
  53:./lib/helper.ct **** 
  54:./lib/helper.ct ****   *p = 0;
 214              		.loc 1 54 6
 215 0016 7B69     		ldr	r3, [r7, #20]
 216 0018 0022     		movs	r2, #0
 217 001a 1A70     		strb	r2, [r3]
  55:./lib/helper.ct **** 
  56:./lib/helper.ct ****   if (places > 8)
 218              		.loc 1 56 6
 219 001c 7B68     		ldr	r3, [r7, #4]
 220 001e 082B     		cmp	r3, #8
 221 0020 12D9     		bls	.L15
  57:./lib/helper.ct ****     places = 8;
 222              		.loc 1 57 12
 223 0022 0823     		movs	r3, #8
 224 0024 7B60     		str	r3, [r7, #4]
  58:./lib/helper.ct **** 
  59:./lib/helper.ct ****   while (val) {
 225              		.loc 1 59 9
 226 0026 0FE0     		b	.L15
 227              	.L16:
  60:./lib/helper.ct ****     p--;
 228              		.loc 1 60 6
 229 0028 7B69     		ldr	r3, [r7, #20]
 230 002a 013B     		subs	r3, r3, #1
 231 002c 7B61     		str	r3, [r7, #20]
  61:./lib/helper.ct ****     p_count++;
 232              		.loc 1 61 12
 233 002e 3B69     		ldr	r3, [r7, #16]
 234 0030 0133     		adds	r3, r3, #1
 235 0032 3B61     		str	r3, [r7, #16]
  62:./lib/helper.ct ****     *p = "0123456789ABCDEF"[val & 0x0f];
 236              		.loc 1 62 33
 237 0034 BB68     		ldr	r3, [r7, #8]
 238 0036 0F22     		movs	r2, #15
 239 0038 1340     		ands	r3, r2
 240              		.loc 1 62 28
 241 003a 0F4A     		ldr	r2, .L20
 242 003c D25C     		ldrb	r2, [r2, r3]
 243              		.loc 1 62 8
 244 003e 7B69     		ldr	r3, [r7, #20]
 245 0040 1A70     		strb	r2, [r3]
  63:./lib/helper.ct ****     val >>= 4;
 246              		.loc 1 63 9
 247 0042 BB68     		ldr	r3, [r7, #8]
 248 0044 1B09     		lsrs	r3, r3, #4
 249 0046 BB60     		str	r3, [r7, #8]
 250              	.L15:
  59:./lib/helper.ct ****     p--;
 251              		.loc 1 59 10
 252 0048 BB68     		ldr	r3, [r7, #8]
 253 004a 002B     		cmp	r3, #0
 254 004c ECD1     		bne	.L16
  64:./lib/helper.ct ****   }
  65:./lib/helper.ct **** 
  66:./lib/helper.ct ****   while (p_count < places) {
 255              		.loc 1 66 9
 256 004e 08E0     		b	.L17
 257              	.L18:
  67:./lib/helper.ct ****     p--;
 258              		.loc 1 67 6
 259 0050 7B69     		ldr	r3, [r7, #20]
 260 0052 013B     		subs	r3, r3, #1
 261 0054 7B61     		str	r3, [r7, #20]
  68:./lib/helper.ct ****     p_count++;
 262              		.loc 1 68 12
 263 0056 3B69     		ldr	r3, [r7, #16]
 264 0058 0133     		adds	r3, r3, #1
 265 005a 3B61     		str	r3, [r7, #16]
  69:./lib/helper.ct ****     *p = '0';
 266              		.loc 1 69 8
 267 005c 7B69     		ldr	r3, [r7, #20]
 268 005e 3022     		movs	r2, #48
 269 0060 1A70     		strb	r2, [r3]
 270              	.L17:
  66:./lib/helper.ct ****     p--;
 271              		.loc 1 66 18
 272 0062 3A69     		ldr	r2, [r7, #16]
 273 0064 7B68     		ldr	r3, [r7, #4]
 274 0066 9A42     		cmp	r2, r3
 275 0068 F2D3     		bcc	.L18
  70:./lib/helper.ct ****   }
  71:./lib/helper.ct **** 
  72:./lib/helper.ct ****   return p;
 276              		.loc 1 72 10
 277 006a 7B69     		ldr	r3, [r7, #20]
  73:./lib/helper.ct **** }
 278              		.loc 1 73 1
 279 006c 1800     		movs	r0, r3
 280 006e BD46     		mov	sp, r7
 281 0070 06B0     		add	sp, sp, #24
 282              		@ sp needed
 283 0072 80BC     		pop	{r7}
 284 0074 02BC     		pop	{r1}
 285 0076 0847     		bx	r1
 286              	.L21:
 287              		.align	2
 288              	.L20:
 289 0078 00000000 		.word	.LC2
 290              		.cfi_endproc
 291              	.LFE1:
 293              		.text
 294              	.Letext0:
DEFINED SYMBOLS
                            *ABS*:00000000 helper.ct
     /tmp/ccBwXceQ.s:25     .text.unsigned2string:00000000 unsigned2string
     /tmp/ccBwXceQ.s:32     .text.unsigned2string:00000000 $t
     /tmp/ccBwXceQ.s:171    .text.unsigned2string:000000c4 $d
     /tmp/ccBwXceQ.s:174    .text.unsigned2string:000000cc $t
     /tmp/ccBwXceQ.s:179    .rodata:00000000 $d
     /tmp/ccBwXceQ.s:183    .text.hex2string:00000000 $t
     /tmp/ccBwXceQ.s:189    .text.hex2string:00000000 hex2string
     /tmp/ccBwXceQ.s:289    .text.hex2string:00000078 $d

UNDEFINED SYMBOLS
__aeabi_uidivmod
__aeabi_uidiv
